{"version":3,"sources":["assets/seen1.jpg","assets/seen2.jpg","assets/ThinkMoreForum.png","assets/myguard1.jpg","assets/myguard2.jpg","assets/Scientific-Articles-Retrieval-Tool.png","assets/phone.glb","assets/laptop.glb","assets/profile.jpg","combination/Profile/index.js","components/Model/deviceModels.js","components/Model/index.js","components/Divider/index.js","combination/ProjectSummary/index.js","combination/Intro/index.js","pages/Home/index.js","utils/prerender.js","assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/Text/index.js","utils/three.js","components/Footer/index.js","components/Section/index.js","components/DecoderText/index.js","utils/image.js","components/Image/index.js"],"names":["ProfileText","status","titleId","Heading","className","classNames","level","id","DecoderText","text","start","delay","Text","size","Profile","visible","sectionRef","Section","as","ref","tabIndex","Transition","in","timeout","onEnter","reflow","Image","reveal","srcSet","ProfileImg","sizes","media","mobile","ModelAnimationType","models","phone","url","width","height","position","x","y","z","animation","laptop","MeshType","getModelAnimation","model","gltf","reduceMotion","renderFrame","index","showDelay","positionVector","Vector3","scene","set","toArray","startPosition","endPosition","modelValue","value","chain","spring","from","to","stiffness","damping","restSpeed","frameNode","children","find","node","name","startRotation","MathUtils","degToRad","endRotation","rotation","Model","show","cameraPosition","style","enableControls","alt","rest","useState","modelData","setModelData","loaded","setLoaded","container","useRef","canvas","camera","textureLoader","modelLoader","modelGroup","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","useInViewport","threshold","usePrefersReducedMotion","useEffect","current","clientWidth","clientHeight","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","Math","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","map","opacity","transparent","Mesh","scale","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","MeshDepthMaterial","userData","darkness","onBeforeCompile","shader","uniforms","fragmentShader","replace","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","Promise","loadAsync","placeholder","all","traverse","convertSRGBToLinear","loadFullResTexture","getImageFromSrcSet","image","fullSize","removeLights","cleanScene","cleanRenderer","blurShadow","useCallback","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadScene","loadedModels","handleModelLoad","modelAnimation","push","stop","rotationSpring","rotationSpringValue","onMouseMove","event","window","innerWidth","innerHeight","clientX","clientY","get","velocity","getVelocity","mass","addEventListener","removeEventListener","handleResize","aspect","updateProjectionMatrix","numToMs","role","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","defaultProps","ProjectSummary","title","description","buttonText","buttonLink","alternate","useWindowSize","isMobile","tablet","indexText","phoneSizes","laptopSizes","renderDetails","Button","iconHoverShift","href","iconEnd","renderPreview","type","isVisible","deviceModels","textures","DisplacementSphere","lazy","Intro","disciplines","scrollIndicatorHidden","theme","useTheme","disciplineIndex","setDisciplineIndex","windowSize","prevTheme","usePrevious","introLabel","slice","join","currentDisciplines","filter","item","useInterval","length","themeId","appear","prerender","fallback","VisuallyHidden","tokens","base","durationXS","TransitionGroup","component","enter","exit","wordStatus","durationL","Icon","icon","Home","useRouteTransition","useLocation","hash","state","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","projectTwo","projectThree","projectFour","about","prefersReducedMotion","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","target","unobserve","includes","prevSections","rootMargin","indicatorObserver","observe","disconnect","scrollObserver","scrollTimeout","hasEntered","supportsNativeSmoothScroll","document","documentElement","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Helmet","rel","src","Seen1","Seen2","ThinkMoreForum","MyGuard2","MyGuard1","Scientific_Articles_Retrieval_Tool","Footer","navigator","userAgent","align","weight","clampedLevel","min","max","Component","GothamBold","crossorigin","secondary","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","Object","keys","forceContextLoss","parent","remove","Date","getFullYear","forwardRef","CharType","startDelay","output","containerInstance","content","split","renderOutput","characterMap","innerHTML","springValue","rand","floor","random","glyphList","shuffle","memo","resolve","reject","Error","tempImage","srcset","onLoad","source","currentSrc","error","generateImage","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","resolveVideoSrcFromSrcSet","sources","srcString","Number","fakeSrcSet","fakeSrc","videoSrc","ImageElements","inViewport","play","showPlaceholder","setShowPlaceholder","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","setVideoSrc","placeholderRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","purgePlaceholder","placeholderElement","resolveVideoSrc","resolvedVideoSrc","pause","togglePlaying","preventDefault","paused","handleFocusPlayButton","onMouseOver","undefined","onMouseOut","muted","loop","playsInline","autoPlay","onLoadStart","onExit","onExited","msToNum","durationS","onFocus","onBlur","onClick","decoding","raised","containerRef"],"mappings":"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","file":"static/js/2.a533becd.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/seen1.69eded44.jpg\";","export default __webpack_public_path__ + \"static/media/seen2.eea3ff72.jpg\";","export default __webpack_public_path__ + \"static/media/ThinkMoreForum.786e794f.png\";","export default __webpack_public_path__ + \"static/media/myguard1.53e46c74.jpg\";","export default __webpack_public_path__ + \"static/media/myguard2.357a7635.jpg\";","export default __webpack_public_path__ + \"static/media/Scientific-Articles-Retrieval-Tool.b06063d2.png\";","export default __webpack_public_path__ + \"static/media/phone.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/laptop.29527f3f.glb\";","export default __webpack_public_path__ + \"static/media/profile.6b23b272.jpg\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport Image from 'components/Image';\nimport Section from 'components/Section';\nimport ProfileImg from 'assets/profile.jpg';\nimport { reflow } from 'utils/transition';\nimport { media } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProfileText = ({ status, titleId }) => (\n  <Fragment>\n    <Heading\n      className={classNames('profile__title', `profile__title--${status}`)}\n      level={3}\n      id={titleId}\n    >\n      <DecoderText text=\"Hi there\" start={status !== 'exited'} delay={500} />\n    </Heading>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I'm an active Open-source contributor of Cross-platform Terminal Tabby and Microsoft's DefinitelyTyped. \n      Develop fantastic features with over 200+ stars on Github. Implemented front-end and back-end CD/CI pipeline, containerize and monitor web application with Docker and Grafana. \n    </Text>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I love coding. I am currently learning Unity and preparing for the AWS certification exam.\n    </Text>\n  </Fragment>\n);\n\nconst Profile = ({ id, visible, sectionRef }) => {\n  const titleId = `${id}-title`;\n\n  return (\n    <Section\n      className=\"profile\"\n      as=\"section\"\n      id={id}\n      ref={sectionRef}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n    >\n      <Transition in={visible} timeout={0} onEnter={reflow}>\n        {status => (\n          <div className=\"profile__content\">\n            <div className=\"profile__column\">\n              <ProfileText status={status} titleId={titleId} />\n            </div>\n            <div className=\"profile__column\">\n              <div className=\"profile__image-wrapper\">\n                <Image\n                  reveal\n                  delay={100}\n                  srcSet={`${ProfileImg} 480w, ${ProfileImg} 960w`}\n                  sizes={`(max-width: ${media.mobile}px) 100vw, 480px`}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Transition>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\n\nexport const ModelAnimationType = {\n  SpringUp: 'spring-up',\n  LaptopOpen: 'laptop-open',\n};\n\nconst models = {\n  phone: {\n    url: phone,\n    width: 374,\n    height: 512,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.SpringUp,\n  },\n  laptop: {\n    url: laptop,\n    width: 1280,\n    height: 800,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.LaptopOpen,\n  },\n};\n\nexport default models;\n","import { useEffect, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  sRGBEncoding,\n  LinearFilter,\n  Color,\n  TextureLoader,\n  Vector3,\n  MathUtils,\n  Group,\n  AmbientLight,\n  DirectionalLight,\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderTarget,\n  PlaneBufferGeometry,\n  MeshBasicMaterial,\n  Mesh,\n  OrthographicCamera,\n  MeshDepthMaterial,\n  ShaderMaterial,\n} from 'three';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { delay, chain, spring, value } from 'popmotion';\nimport { getImageFromSrcSet } from 'utils/image';\nimport { useInViewport, usePrefersReducedMotion } from 'hooks';\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\nimport { ModelAnimationType } from './deviceModels';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst MeshType = {\n  Frame: 'Frame',\n  Logo: 'Logo',\n  Screen: 'Screen',\n};\n\nconst Model = ({\n  models,\n  show = true,\n  showDelay = 0,\n  cameraPosition = { x: 0, y: 0, z: 8 },\n  enableControls,\n  style,\n  className,\n  alt,\n  ...rest\n}) => {\n  const [modelData, setModelData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const container = useRef();\n  const canvas = useRef();\n  const camera = useRef();\n  const textureLoader = useRef();\n  const modelLoader = useRef();\n  const modelGroup = useRef();\n  const scene = useRef();\n  const renderer = useRef();\n  const shadowGroup = useRef();\n  const renderTarget = useRef();\n  const renderTargetBlur = useRef();\n  const shadowCamera = useRef();\n  const depthMaterial = useRef();\n  const horizontalBlurMaterial = useRef();\n  const verticalBlurMaterial = useRef();\n  const plane = useRef();\n  const lights = useRef();\n  const blurPlane = useRef();\n  const fillPlane = useRef();\n  const isInViewport = useInViewport(container, false, { threshold: 0.4 });\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = container.current;\n\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      alpha: true,\n      antialias: false,\n      powerPreference: 'high-performance',\n    });\n\n    renderer.current.setPixelRatio(2);\n    renderer.current.setSize(clientWidth, clientHeight);\n    renderer.current.outputEncoding = sRGBEncoding;\n    renderer.current.physicallyCorrectLights = true;\n\n    camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\n    camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n    scene.current = new Scene();\n\n    textureLoader.current = new TextureLoader();\n    modelLoader.current = new GLTFLoader();\n    modelGroup.current = new Group();\n\n    // Lighting\n    const ambientLight = new AmbientLight(0xffffff, 1.2);\n    const keyLight = new DirectionalLight(0xffffff, 1.1);\n    const fillLight = new DirectionalLight(0xffffff, 0.8);\n\n    fillLight.position.set(-6, 2, 2);\n    keyLight.position.set(0.5, 0, 0.866);\n    lights.current = [ambientLight, keyLight, fillLight];\n    lights.current.forEach(light => scene.current.add(light));\n\n    // The shadow container, if you need to move the plane just move this\n    shadowGroup.current = new Group();\n    scene.current.add(shadowGroup.current);\n    shadowGroup.current.position.set(0, 0, -0.8);\n    shadowGroup.current.rotateX(Math.PI / 2);\n\n    const renderTargetSize = 512;\n    const planeWidth = 8;\n    const planeHeight = 8;\n    const cameraHeight = 1.5;\n    const shadowOpacity = 0.8;\n    const shadowDarkness = 3;\n\n    // The render target that will show the shadows in the plane texture\n    renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTarget.current.texture.generateMipmaps = false;\n\n    // The render target that we will use to blur the first render target\n    renderTargetBlur.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTargetBlur.current.texture.generateMipmaps = false;\n\n    // Make a plane and make it face up\n    const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n      Math.PI / 2\n    );\n\n    const planeMaterial = new MeshBasicMaterial({\n      map: renderTarget.current.texture,\n      opacity: shadowOpacity,\n      transparent: true,\n    });\n\n    plane.current = new Mesh(planeGeometry, planeMaterial);\n    // The y from the texture is flipped!\n    plane.current.scale.y = -1;\n    shadowGroup.current.add(plane.current);\n\n    // The plane onto which to blur the texture\n    blurPlane.current = new Mesh(planeGeometry);\n    blurPlane.current.visible = false;\n    shadowGroup.current.add(blurPlane.current);\n\n    // The plane with the color of the ground\n    const fillMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      opacity: 0,\n      transparent: true,\n    });\n\n    fillPlane.current = new Mesh(planeGeometry, fillMaterial);\n    fillPlane.current.rotateX(Math.PI);\n    fillPlane.current.position.y -= 0.00001;\n    shadowGroup.current.add(fillPlane.current);\n\n    // The camera to render the depth material from\n    shadowCamera.current = new OrthographicCamera(\n      -planeWidth / 2,\n      planeWidth / 2,\n      planeHeight / 2,\n      -planeHeight / 2,\n      0,\n      cameraHeight\n    );\n    // Get the camera to look up\n    shadowCamera.current.rotation.x = Math.PI / 2;\n    shadowGroup.current.add(shadowCamera.current);\n\n    // Like MeshDepthMaterial, but goes from black to transparent\n    depthMaterial.current = new MeshDepthMaterial();\n    depthMaterial.current.userData.darkness = { value: shadowDarkness };\n    depthMaterial.current.onBeforeCompile = shader => {\n      shader.uniforms.darkness = depthMaterial.current.userData.darkness;\n      shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n          'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n          'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `;\n    };\n    depthMaterial.current.depthTest = false;\n    depthMaterial.current.depthWrite = false;\n\n    horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader);\n    horizontalBlurMaterial.current.depthTest = false;\n\n    verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.current.depthTest = false;\n\n    const applyScreenTexture = async (texture, node) => {\n      texture.encoding = sRGBEncoding;\n      texture.minFilter = LinearFilter;\n      texture.magFilter = LinearFilter;\n      texture.flipY = false;\n      texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n      texture.generateMipmaps = false;\n\n      // Decode the texture to prevent jank on first render\n      await renderer.current.initTexture(texture);\n\n      node.material.color = new Color(0xffffff);\n      node.material.transparent = false;\n      node.material.map = texture;\n    };\n\n    // Build an array of promises to fetch and apply models & animations\n    const modelConfigPromises = models.map(async (model, index) => {\n      const { texture, position, url } = model;\n      let loadFullResTexture;\n\n      const [gltf, placeholder] = await Promise.all([\n        await modelLoader.current.loadAsync(url),\n        await textureLoader.current.loadAsync(texture.placeholder),\n      ]);\n\n      gltf.scene.traverse(async node => {\n        if (node.material) {\n          node.material.color = new Color(0x1f2025);\n          node.material.color.convertSRGBToLinear();\n        }\n\n        if (node.name === MeshType.Screen) {\n          applyScreenTexture(placeholder, node);\n          loadFullResTexture = async () => {\n            const image = await getImageFromSrcSet(texture);\n            const fullSize = await textureLoader.current.loadAsync(image);\n            await applyScreenTexture(fullSize, node);\n          };\n        }\n      });\n\n      modelGroup.current.add(gltf.scene);\n\n      const animation = getModelAnimation({\n        model,\n        gltf,\n        position,\n        reduceMotion,\n        renderFrame,\n        index,\n        showDelay,\n      });\n\n      return { ...animation, loadFullResTexture };\n    });\n\n    setModelData(modelConfigPromises);\n\n    return () => {\n      removeLights(lights.current);\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const blurShadow = useCallback(amount => {\n    blurPlane.current.visible = true;\n\n    // Blur horizontally and draw in the renderTargetBlur\n    blurPlane.current.material = horizontalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\n    horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTargetBlur.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    // Blur vertically and draw in the main renderTarget\n    blurPlane.current.material = verticalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\n    verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    blurPlane.current.visible = false;\n  }, []);\n\n  // Handle render passes for a single frame\n  const renderFrame = useCallback(() => {\n    const blurAmount = 5;\n\n    // Remove the background\n    const initialBackground = scene.current.background;\n    scene.current.background = null;\n\n    // Force the depthMaterial to everything\n    // cameraHelper.visible = false;\n    scene.current.overrideMaterial = depthMaterial.current;\n\n    // Render to the render target to get the depths\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(scene.current, shadowCamera.current);\n\n    // And reset the override material\n    scene.current.overrideMaterial = null;\n\n    blurShadow(blurAmount);\n\n    // A second pass to reduce the artifacts\n    // (0.4 is the minimum blur amout so that the artifacts are gone)\n    blurShadow(blurAmount * 0.4);\n\n    // Reset and render the normal scene\n    renderer.current.setRenderTarget(null);\n    scene.current.background = initialBackground;\n\n    renderer.current.render(scene.current, camera.current);\n  }, [blurShadow]);\n\n  useEffect(() => {\n    let introSprings = [];\n\n    if (!modelData) return;\n\n    scene.current.add(modelGroup.current);\n\n    const loadScene = async () => {\n      const loadedModels = await Promise.all(modelData);\n\n      setLoaded(true);\n\n      const handleModelLoad = loadedModels.map(async model => {\n        // Start animation\n        if (model.animation) {\n          const modelAnimation = model.animation.start(model.modelValue);\n          introSprings.push(modelAnimation);\n        }\n\n        if (reduceMotion) {\n          renderFrame();\n        }\n\n        // Load full res screen texture\n        await model.loadFullResTexture();\n\n        // Render the loaded texture\n        if (reduceMotion) {\n          renderFrame();\n        }\n      });\n\n      await Promise.all(handleModelLoad);\n    };\n\n    if (show) {\n      loadScene();\n    }\n\n    return () => {\n      for (const spring of introSprings) {\n        spring.stop();\n      }\n    };\n  }, [modelData, reduceMotion, renderFrame, show]);\n\n  // Handle mouse move animation\n  useEffect(() => {\n    let rotationSpring;\n    let rotationSpringValue;\n\n    const onMouseMove = event => {\n      const { rotation } = modelGroup.current;\n      const { innerWidth, innerHeight } = window;\n\n      const position = {\n        x: (event.clientX - innerWidth / 2) / innerWidth,\n        y: (event.clientY - innerHeight / 2) / innerHeight,\n      };\n\n      if (!rotationSpringValue) {\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\n          rotation.set(x, y, rotation.z);\n          renderFrame();\n        });\n      }\n\n      rotationSpring = spring({\n        from: rotationSpringValue.get(),\n        to: { x: position.y / 2, y: position.x / 2 },\n        stiffness: 40,\n        damping: 40,\n        velocity: rotationSpringValue.getVelocity(),\n        restSpeed: 0.00001,\n        mass: 1.4,\n      }).start(rotationSpringValue);\n    };\n\n    if (isInViewport && !reduceMotion) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      rotationSpring?.stop();\n    };\n  }, [isInViewport, reduceMotion, renderFrame]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (!container.current) return;\n\n      const { clientWidth, clientHeight } = container.current;\n\n      renderer.current.setSize(clientWidth, clientHeight);\n      camera.current.aspect = clientWidth / clientHeight;\n      camera.current.updateProjectionMatrix();\n\n      renderFrame();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [renderFrame]);\n\n  return (\n    <div\n      className={classNames('model', { 'model--loaded': loaded }, className)}\n      style={{ '--delay': numToMs(showDelay), ...style }}\n      ref={container}\n      role=\"img\"\n      aria-label={alt}\n      {...rest}\n    >\n      <canvas className=\"model__canvas\" ref={canvas} />\n    </div>\n  );\n};\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n  const positionVector = new Vector3(\n    model.position.x,\n    model.position.y,\n    model.position.z\n  );\n\n  if (reduceMotion) {\n    gltf.scene.position.set(...positionVector.toArray());\n    return;\n  }\n\n  // Simple slide up animation\n  if (model.animation === ModelAnimationType.SpringUp) {\n    const startPosition = new Vector3(\n      positionVector.x,\n      positionVector.y - 1,\n      positionVector.z\n    );\n    const endPosition = positionVector;\n\n    gltf.scene.position.set(...startPosition.toArray());\n\n    const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n      gltf.scene.position.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay * 0.6),\n      spring({\n        from: startPosition,\n        to: endPosition,\n        stiffness: 60,\n        damping: 16,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n\n  // Laptop open animation\n  if (model.animation === ModelAnimationType.LaptopOpen) {\n    const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame);\n    const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0);\n    const endRotation = new Vector3(0, 0, 0);\n\n    gltf.scene.position.set(...positionVector.toArray());\n    frameNode.rotation.set(...startRotation.toArray());\n\n    const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n      frameNode.rotation.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay + 200),\n      spring({\n        from: startRotation,\n        to: endRotation,\n        stiffness: 50,\n        damping: 14,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n}\n\nexport default Model;\n","import classNames from 'classnames';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst Divider = ({\n  lineWidth,\n  lineHeight,\n  notchWidth,\n  notchHeight,\n  collapseDelay,\n  collapsed,\n  className,\n  style,\n}) => (\n  <div\n    className={classNames('divider', className)}\n    style={{\n      '--lineWidth': lineWidth,\n      '--lineHeight': lineHeight,\n      '--notchWidth': notchWidth,\n      '--notchHeight': notchHeight,\n      '--collapseDelay': numToMs(collapseDelay),\n      ...style,\n    }}\n  >\n    <div\n      className={classNames('divider__line', { 'divider__line--collapsed': collapsed })}\n    />\n    <div\n      className={classNames('divider__notch', { 'divider__notch--collapsed': collapsed })}\n      style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n    />\n  </div>\n);\n\nDivider.defaultProps = {\n  lineWidth: '100%',\n  lineHeight: '2px',\n  notchWidth: '90px',\n  notchHeight: '10px',\n  collapsed: false,\n  collapseDelay: 0,\n};\n\nexport default Divider;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport Section from 'components/Section';\nimport { Button } from 'components/Button';\nimport Model from 'components/Model';\nimport Divider from 'components/Divider';\nimport { useWindowSize } from 'hooks';\nimport { reflow, isVisible } from 'utils/transition';\nimport { media } from 'utils/style';\nimport deviceModels from 'components/Model/deviceModels';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProjectSummary = ({\n  id,\n  visible,\n  sectionRef,\n  index,\n  title,\n  description,\n  model,\n  buttonText,\n  buttonLink,\n  alternate,\n  ...rest\n}) => {\n  const { width } = useWindowSize();\n  const titleId = `${id}-title`;\n  const isMobile = width <= media.tablet;\n  const indexText = index < 10 ? `0${index}` : index;\n  const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`;\n  const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`;\n\n  const renderDetails = status => (\n    <div className=\"project-summary__details\">\n      <div aria-hidden className=\"project-summary__index\">\n        <Divider\n          notchWidth=\"64px\"\n          notchHeight=\"8px\"\n          collapsed={status !== 'entered'}\n          collapseDelay={1000}\n        />\n        <span\n          className={classNames(\n            'project-summary__index-number',\n            `project-summary__index-number--${status}`\n          )}\n        >\n          {indexText}\n        </span>\n      </div>\n      <Heading\n        level={3}\n        as=\"h2\"\n        className={classNames(\n          'project-summary__title',\n          `project-summary__title--${status}`\n        )}\n        id={titleId}\n      >\n        {title}\n      </Heading>\n      <Text\n        className={classNames(\n          'project-summary__description',\n          `project-summary__description--${status}`\n        )}\n      >\n        {description}\n      </Text>\n      <div\n        className={classNames(\n          'project-summary__button',\n          `project-summary__button--${status}`\n        )}\n      >\n        <Button iconHoverShift href={buttonLink} iconEnd=\"arrowRight\">\n          {buttonText}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderPreview = status => (\n    <div className=\"project-summary__preview\">\n      {model.type === 'laptop' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--laptop'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 8 }}\n            showDelay={800}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.laptop,\n                texture: {\n                  ...model.textures[0],\n                  sizes: laptopSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n      {model.type === 'phone' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--phone'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n            showDelay={500}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.phone,\n                position: { x: -0.6, y: 1.1, z: 0 },\n                texture: {\n                  ...model.textures[0],\n                  sizes: phoneSizes,\n                },\n              },\n              {\n                ...deviceModels.phone,\n                position: { x: 0.6, y: -0.5, z: 0.3 },\n                texture: {\n                  ...model.textures[1],\n                  sizes: phoneSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n\n  return (\n    <Section\n      className={classNames('project-summary', {\n        'project-summary--alternate': alternate,\n        'project-summary--first': index === '01',\n      })}\n      as=\"section\"\n      aria-labelledby={titleId}\n      ref={sectionRef}\n      id={id}\n      tabIndex={-1}\n      {...rest}\n    >\n      <div className=\"project-summary__content\">\n        <Transition in={visible} timeout={0} onEnter={reflow}>\n          {status => (\n            <Fragment>\n              {!alternate && !isMobile && (\n                <Fragment>\n                  {renderDetails(status)}\n                  {renderPreview(status)}\n                </Fragment>\n              )}\n              {(alternate || isMobile) && (\n                <Fragment>\n                  {renderPreview(status)}\n                  {renderDetails(status)}\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Transition>\n      </div>\n    </Section>\n  );\n};\n\nexport default ProjectSummary;\n","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport Heading from 'components/Heading';\nimport Section from 'components/Section';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport Icon from 'components/Icon';\nimport './index.css';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n  const theme = useTheme();\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\n  const windowSize = useWindowSize();\n  const prevTheme = usePrevious(theme);\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\n    ', and '\n  );\n  const currentDisciplines = disciplines.filter(\n    (item, index) => index === disciplineIndex\n  );\n  const titleId = `${id}-title`;\n\n  useInterval(\n    () => {\n      const index = (disciplineIndex + 1) % disciplines.length;\n      setDisciplineIndex(index);\n    },\n    5000,\n    theme.themeId\n  );\n\n  useEffect(() => {\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\n      setDisciplineIndex(0);\n    }\n  }, [theme.themeId, prevTheme]);\n\n  return (\n    <Section\n      className=\"intro\"\n      as=\"section\"\n      ref={sectionRef}\n      id={id}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n      {...rest}\n    >\n      <Transition\n        key={theme.themeId}\n        appear={!prerender}\n        in={!prerender}\n        timeout={3000}\n        onEnter={reflow}\n      >\n        {status => (\n          <Fragment>\n            {!prerender && (\n              <Suspense fallback={null}>\n                <DisplacementSphere />\n              </Suspense>\n            )}\n            <header className=\"intro__text\">\n              <h1\n                className={classNames('intro__name', `intro__name--${status}`)}\n                id={titleId}\n              >\n                <DecoderText text=\"Alan Qiming Liu\" start={!prerender} delay={300} />\n              </h1>\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\n                <VisuallyHidden className=\"intro__title-label\">{`Web Developer + ${introLabel}`}</VisuallyHidden>\n                <span\n                  aria-hidden\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                >\n                  <span\n                    className={classNames(\n                      'intro__title-word',\n                      `intro__title-word--${status}`,\n                    )}\n                    style={{ '--delay': tokens.base.durationXS }}\n                  >\n                    Full Stack<br></br>\n                    Web Developer\n                  </span>\n                </span>\n                <TransitionGroup\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                  component=\"span\"\n                >\n                  {currentDisciplines.map(item => (\n                    <Transition\n                      appear\n                      timeout={{ enter: 3000, exit: 2000 }}\n                      key={item}\n                      onEnter={reflow}\n                    >\n                      {wordStatus => (\n                        <span\n                          aria-hidden\n                          className={classNames(\n                            'intro__title-word',\n                            'intro__title-word--plus',\n                            `intro__title-word--${wordStatus}`\n                          )}\n                          style={{ '--delay': tokens.base.durationL }}\n                        >\n                          {item}\n                        </span>\n                      )}\n                    </Transition>\n                  ))}\n                </TransitionGroup>\n              </Heading>\n            </header>\n            {windowSize.width > media.tablet && (\n              <div\n                className={classNames(\n                  'intro__scroll-indicator',\n                  `intro__scroll-indicator--${status}`,\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n                status={status}\n              />\n            )}\n            {windowSize.width <= media.tablet && (\n              <div\n                className={classNames(\n                  'intro__mobile-scroll-indicator',\n                  `intro__mobile-scroll-indicator--${status}`,\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n              >\n                <Icon icon=\"arrowDown\" aria-hidden />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Transition>\n    </Section>\n  );\n}\n\nexport default Intro;\n","import './index.css';\n\nimport Seen1 from 'assets/seen1.jpg';\nimport Seen2 from 'assets/seen2.jpg';\nimport ThinkMoreForum from 'assets/ThinkMoreForum.png';\nimport MyGuard1 from 'assets/myguard1.jpg';\nimport MyGuard2 from 'assets/myguard2.jpg';\nimport Scientific_Articles_Retrieval_Tool from 'assets/Scientific-Articles-Retrieval-Tool.png';\nimport phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\nimport Footer from 'components/Footer';\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\n\nimport Profile from 'combination/Profile';\nimport ProjectSummary from 'combination/ProjectSummary';\nimport Intro from 'combination/Intro';\n\nimport { disciplines } from 'app/config';\n\nconst Home = () => {\n  const { status } = useRouteTransition();\n  const { hash, state } = useLocation();\n  const initHash = useRef(true);\n  const [visibleSections, setVisibleSections] = useState([]);\n  const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false);\n  const intro = useRef();\n  const projectOne = useRef();\n  const projectTwo = useRef();\n  const projectThree = useRef();\n  const projectFour = useRef();\n  const about = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const revealSections = [\n      intro,\n      projectOne,\n      projectTwo,\n      projectThree,\n      projectFour,\n      about,\n    ];\n\n    const sectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const section = entry.target;\n            observer.unobserve(section);\n            if (visibleSections.includes(section)) return;\n            setVisibleSections(prevSections => [...prevSections, section]);\n          }\n        });\n      },\n      { rootMargin: '0px 0px -10% 0px' }\n    );\n\n    const indicatorObserver = new IntersectionObserver(\n      ([entry]) => {\n        setScrollIndicatorHidden(!entry.isIntersecting);\n      },\n      { rootMargin: '-100% 0px 0px 0px' }\n    );\n\n    revealSections.forEach(section => {\n      sectionObserver.observe(section.current);\n    });\n\n    indicatorObserver.observe(intro.current);\n\n    return () => {\n      sectionObserver.disconnect();\n      indicatorObserver.disconnect();\n    };\n  }, [visibleSections]);\n\n  useEffect(() => {\n    const hasEntered = status === 'entered';\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\n    let scrollObserver;\n    let scrollTimeout;\n\n    const handleHashchange = (hash, scroll) => {\n      clearTimeout(scrollTimeout);\n      const hashSections = [intro, projectOne, about];\n      const hashString = hash.replace('#', '');\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\n      if (!element) return;\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\n      const top = element.current.offsetTop;\n\n      scrollObserver = new IntersectionObserver(\n        (entries, observer) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            scrollTimeout = setTimeout(\n              () => {\n                element.current.focus();\n              },\n              prefersReducedMotion ? 0 : 400\n            );\n            observer.unobserve(entry.target);\n          }\n        },\n        { rootMargin: '-20% 0px -20% 0px' }\n      );\n\n      scrollObserver.observe(element.current);\n\n      if (supportsNativeSmoothScroll) {\n        window.scroll({\n          top,\n          left: 0,\n          behavior,\n        });\n      } else {\n        window.scrollTo(0, top);\n      }\n    };\n\n    if (hash && initHash.current && hasEntered) {\n      handleHashchange(hash, false);\n      initHash.current = false;\n    } else if (!hash && initHash.current && hasEntered) {\n      window.scrollTo(0, 0);\n      initHash.current = false;\n    } else if (hasEntered) {\n      handleHashchange(hash, true);\n    }\n\n    return () => {\n      clearTimeout(scrollTimeout);\n      if (scrollObserver) {\n        scrollObserver.disconnect();\n      }\n    };\n  }, [hash, state, prefersReducedMotion, status]);\n\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>Qiming Liu | Web Developer</title>\n        <link rel=\"prefetch\" href={phone} as=\"fetch\" />\n        <link rel=\"prefetch\" href={laptop} as=\"fetch\" />\n      </Helmet>\n      <Intro\n        id=\"intro\"\n        sectionRef={intro}\n        disciplines={disciplines}\n        scrollIndicatorHidden={scrollIndicatorHidden}\n      />\n      <ProjectSummary\n        id=\"project\"\n        alternate\n        sectionRef={projectOne}\n        visible={visibleSections.includes(projectOne.current)}\n        index={1}\n        title=\"Android Native App - Seen\"\n        description=\"An easy forum Android app include instant messaging.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          textures: [\n            {\n              src: Seen1,\n              srcSet: `${Seen1} 254w, ${Seen1} 508w`,\n              placeholder: Seen1,\n            },\n            {\n              src: Seen2,\n              srcSet: `${Seen2} 254w, ${Seen2} 508w`,\n              placeholder: Seen2,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project2\"\n        sectionRef={projectTwo}\n        visible={visibleSections.includes(projectTwo.current)}\n        index={2}\n        title=\"ThinkMore Community Forum\"\n        description=\"A forum build with Next.js and Spring Boot\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://www.thinkmoreapp.com\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: ThinkMoreForum,\n              srcSet: `${ThinkMoreForum} 980w, ${ThinkMoreForum} 1376w`,\n              placeholder: ThinkMoreForum,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project3\"\n        alternate\n        sectionRef={projectThree}\n        visible={visibleSections.includes(projectThree.current)}\n        index={3}\n        title=\"MyGuard\"\n        description=\"Raspberry Pi - Android - Sensor: Indoor Surveillance System (Firebase, Tensorflow.js, Cordova, cdnVue2)\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/MyGuard\"\n        model={{\n          type: 'phone',\n          alt: 'App login screen',\n          textures: [\n            {\n              src: MyGuard2,\n              srcSet: `${MyGuard2} 254w, ${MyGuard2} 508w`,\n              placeholder: MyGuard2,\n            },\n            {\n              src: MyGuard1,\n              srcSet: `${MyGuard1} 254w, ${MyGuard1} 508w`,\n              placeholder: MyGuard1,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project4\"\n        sectionRef={projectFour}\n        visible={visibleSections.includes(projectFour.current)}\n        index={4}\n        title=\"Scientific Articles Retrieval Tool\"\n        description=\"My Master Project about Natural Language Processing\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Scientific-Articles-Retrieval-Tool\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: Scientific_Articles_Retrieval_Tool,\n              srcSet: `${Scientific_Articles_Retrieval_Tool} 980w, ${Scientific_Articles_Retrieval_Tool} 1376w`,\n              placeholder: Scientific_Articles_Retrieval_Tool,\n            },\n          ],\n        }}\n      />\n      <Profile\n        id=\"about\"\n        sectionRef={about}\n        visible={visibleSections.includes(about.current)}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n","import './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">{`© ${new Date().getFullYear()} Qiming Liu`}</span>\n  </footer>\n);\n\nexport default Footer;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport { glyphList } from 'app/config';\nimport './index.css';\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphList.length);\n      return { type: CharType.Glyph, value: glyphList[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n"],"sourceRoot":""}