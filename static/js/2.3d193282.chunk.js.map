{"version":3,"sources":["assets/seen1.jpg","assets/seen2.jpg","assets/websubtitleplayer.png","assets/myguard1.jpg","assets/myguard2.jpg","assets/battleknight.jpg","assets/phone.glb","assets/laptop.glb","components/Footer/index.js","utils/image.js","components/Image/index.js","components/Section/index.js","assets/profile.jpg","combination/Profile/index.js","components/Model/deviceModels.js","components/Model/index.js","components/Divider/index.js","combination/ProjectSummary/index.js","combination/Intro/index.js","pages/Home/index.js","utils/prerender.js","assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/DecoderText/index.js","components/Text/index.js","utils/three.js"],"names":["Footer","className","Date","getFullYear","async","getImageFromSrcSet","src","srcSet","sizes","Promise","resolve","reject","Error","tempImage","Image","srcset","onLoad","removeEventListener","source","currentSrc","addEventListener","error","resolveVideoSrcFromSrcSet","sources","split","map","srcString","width","image","height","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","replace","fakeSrcSet","join","fakeSrc","find","ImageElements","loaded","inViewport","placeholder","delay","alt","play","reveal","rest","prefersReducedMotion","usePrefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","useRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","prerender","useEffect","purgePlaceholder","placeholderElement","current","resolvedVideoSrc","resolveVideoSrc","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","classNames","onMouseOver","undefined","onMouseOut","style","numToMs","muted","loop","playsInline","autoPlay","role","onLoadStart","aria-label","ref","Transition","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","base","durationS","status","VisuallyHidden","visible","Button","onFocus","onBlur","onClick","Icon","icon","decoding","aria-hidden","target","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","Section","forwardRef","as","Component","children","ProfileText","titleId","Heading","level","id","DecoderText","text","start","Text","size","Profile","sectionRef","aria-labelledby","tabIndex","onEnter","ProfileImg","media","mobile","ModelAnimationType","models","phone","url","position","x","y","z","animation","laptop","MeshType","Model","show","showDelay","cameraPosition","enableControls","modelData","setModelData","container","camera","textureLoader","modelLoader","modelGroup","scene","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","threshold","reduceMotion","clientWidth","clientHeight","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","Math","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","opacity","transparent","Mesh","scale","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","value","onBeforeCompile","shader","uniforms","fragmentShader","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","model","index","loadFullResTexture","gltf","all","loadAsync","traverse","convertSRGBToLinear","name","fullSize","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","chain","spring","from","to","stiffness","damping","restSpeed","frameNode","startRotation","MathUtils","degToRad","endRotation","getModelAnimation","removeLights","cleanScene","cleanRenderer","blurShadow","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","stop","rotationSpring","rotationSpringValue","onMouseMove","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","handleResize","aspect","updateProjectionMatrix","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","defaultProps","ProjectSummary","title","description","buttonText","buttonLink","alternate","useWindowSize","isMobile","tablet","indexText","phoneSizes","laptopSizes","renderDetails","iconHoverShift","href","iconEnd","renderPreview","type","isVisible","deviceModels","textures","DisplacementSphere","lazy","Intro","disciplines","scrollIndicatorHidden","theme","disciplineIndex","setDisciplineIndex","windowSize","prevTheme","usePrevious","introLabel","slice","currentDisciplines","filter","item","useInterval","length","appear","fallback","durationXS","TransitionGroup","component","wordStatus","durationL","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","projectTwo","projectThree","projectFour","about","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","includes","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Helmet","rel","Seen1","Seen2","WebSubtitlePlayer","MyGuard2","MyGuard1","BattleKnight","navigator","userAgent","align","weight","clampedLevel","min","max","GothamBold","crossorigin","glyphs","CharType","startDelay","output","containerInstance","content","renderOutput","characterMap","innerHTML","springValue","rand","floor","random","shuffle","memo","secondary","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","key","Object","keys","forceContextLoss","parent"],"mappings":"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","file":"static/js/2.3d193282.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/seen1.69eded44.jpg\";","export default __webpack_public_path__ + \"static/media/seen2.eea3ff72.jpg\";","export default __webpack_public_path__ + \"static/media/websubtitleplayer.ed9c9351.png\";","export default __webpack_public_path__ + \"static/media/myguard1.53e46c74.jpg\";","export default __webpack_public_path__ + \"static/media/myguard2.357a7635.jpg\";","export default __webpack_public_path__ + \"static/media/battleknight.04c3502e.jpg\";","export default __webpack_public_path__ + \"static/media/phone.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/laptop.29527f3f.glb\";","import './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">{`© ${new Date().getFullYear()} Qiming Liu`}</span>\n  </footer>\n);\n\nexport default Footer;\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","export default __webpack_public_path__ + \"static/media/profile.6b23b272.jpg\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\n// import Link from 'components/Link';\n// import { Button } from 'components/Button';\n// import Divider from 'components/Divider';\nimport DecoderText from 'components/DecoderText';\nimport Image from 'components/Image';\nimport Section from 'components/Section';\nimport ProfileImg from 'assets/profile.jpg';\nimport { reflow } from 'utils/transition';\nimport { media } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProfileText = ({ status, titleId }) => (\n  <Fragment>\n    <Heading\n      className={classNames('profile__title', `profile__title--${status}`)}\n      level={3}\n      id={titleId}\n    >\n      <DecoderText text=\"Hi there\" start={status !== 'exited'} delay={500} />\n    </Heading>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      My name is Qiming and I am studying at the University of Adelaide. Java and Typescript are my main programming development languages.\n    </Text>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I enjoy trying out various new tools and libraries as challenges. My dream is to become a game developer and I am currently learning Unity and C#.\n    </Text>\n  </Fragment>\n);\n\nconst Profile = ({ id, visible, sectionRef }) => {\n  const titleId = `${id}-title`;\n\n  return (\n    <Section\n      className=\"profile\"\n      as=\"section\"\n      id={id}\n      ref={sectionRef}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n    >\n      <Transition in={visible} timeout={0} onEnter={reflow}>\n        {status => (\n          <div className=\"profile__content\">\n            <div className=\"profile__column\">\n              <ProfileText status={status} titleId={titleId} />\n            </div>\n            <div className=\"profile__column\">\n              <div className=\"profile__image-wrapper\">\n                <Image\n                  reveal\n                  delay={100}\n                  srcSet={`${ProfileImg} 480w, ${ProfileImg} 960w`}\n                  sizes={`(max-width: ${media.mobile}px) 100vw, 480px`}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Transition>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\n\nexport const ModelAnimationType = {\n  SpringUp: 'spring-up',\n  LaptopOpen: 'laptop-open',\n};\n\nconst models = {\n  phone: {\n    url: phone,\n    width: 374,\n    height: 512,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.SpringUp,\n  },\n  laptop: {\n    url: laptop,\n    width: 1280,\n    height: 800,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.LaptopOpen,\n  },\n};\n\nexport default models;\n","import { useEffect, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  sRGBEncoding,\n  LinearFilter,\n  Color,\n  TextureLoader,\n  Vector3,\n  MathUtils,\n  Group,\n  AmbientLight,\n  DirectionalLight,\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderTarget,\n  PlaneBufferGeometry,\n  MeshBasicMaterial,\n  Mesh,\n  OrthographicCamera,\n  MeshDepthMaterial,\n  ShaderMaterial,\n} from 'three';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { delay, chain, spring, value } from 'popmotion';\nimport { getImageFromSrcSet } from 'utils/image';\nimport { useInViewport, usePrefersReducedMotion } from 'hooks';\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\nimport { ModelAnimationType } from './deviceModels';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst MeshType = {\n  Frame: 'Frame',\n  Logo: 'Logo',\n  Screen: 'Screen',\n};\n\nconst Model = ({\n  models,\n  show = true,\n  showDelay = 0,\n  cameraPosition = { x: 0, y: 0, z: 8 },\n  enableControls,\n  style,\n  className,\n  alt,\n  ...rest\n}) => {\n  const [modelData, setModelData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const container = useRef();\n  const canvas = useRef();\n  const camera = useRef();\n  const textureLoader = useRef();\n  const modelLoader = useRef();\n  const modelGroup = useRef();\n  const scene = useRef();\n  const renderer = useRef();\n  const shadowGroup = useRef();\n  const renderTarget = useRef();\n  const renderTargetBlur = useRef();\n  const shadowCamera = useRef();\n  const depthMaterial = useRef();\n  const horizontalBlurMaterial = useRef();\n  const verticalBlurMaterial = useRef();\n  const plane = useRef();\n  const lights = useRef();\n  const blurPlane = useRef();\n  const fillPlane = useRef();\n  const isInViewport = useInViewport(container, false, { threshold: 0.4 });\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = container.current;\n\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      alpha: true,\n      antialias: false,\n      powerPreference: 'high-performance',\n    });\n\n    renderer.current.setPixelRatio(2);\n    renderer.current.setSize(clientWidth, clientHeight);\n    renderer.current.outputEncoding = sRGBEncoding;\n    renderer.current.physicallyCorrectLights = true;\n\n    camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\n    camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n    scene.current = new Scene();\n\n    textureLoader.current = new TextureLoader();\n    modelLoader.current = new GLTFLoader();\n    modelGroup.current = new Group();\n\n    // Lighting\n    const ambientLight = new AmbientLight(0xffffff, 1.2);\n    const keyLight = new DirectionalLight(0xffffff, 1.1);\n    const fillLight = new DirectionalLight(0xffffff, 0.8);\n\n    fillLight.position.set(-6, 2, 2);\n    keyLight.position.set(0.5, 0, 0.866);\n    lights.current = [ambientLight, keyLight, fillLight];\n    lights.current.forEach(light => scene.current.add(light));\n\n    // The shadow container, if you need to move the plane just move this\n    shadowGroup.current = new Group();\n    scene.current.add(shadowGroup.current);\n    shadowGroup.current.position.set(0, 0, -0.8);\n    shadowGroup.current.rotateX(Math.PI / 2);\n\n    const renderTargetSize = 512;\n    const planeWidth = 8;\n    const planeHeight = 8;\n    const cameraHeight = 1.5;\n    const shadowOpacity = 0.8;\n    const shadowDarkness = 3;\n\n    // The render target that will show the shadows in the plane texture\n    renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTarget.current.texture.generateMipmaps = false;\n\n    // The render target that we will use to blur the first render target\n    renderTargetBlur.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTargetBlur.current.texture.generateMipmaps = false;\n\n    // Make a plane and make it face up\n    const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n      Math.PI / 2\n    );\n\n    const planeMaterial = new MeshBasicMaterial({\n      map: renderTarget.current.texture,\n      opacity: shadowOpacity,\n      transparent: true,\n    });\n\n    plane.current = new Mesh(planeGeometry, planeMaterial);\n    // The y from the texture is flipped!\n    plane.current.scale.y = -1;\n    shadowGroup.current.add(plane.current);\n\n    // The plane onto which to blur the texture\n    blurPlane.current = new Mesh(planeGeometry);\n    blurPlane.current.visible = false;\n    shadowGroup.current.add(blurPlane.current);\n\n    // The plane with the color of the ground\n    const fillMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      opacity: 0,\n      transparent: true,\n    });\n\n    fillPlane.current = new Mesh(planeGeometry, fillMaterial);\n    fillPlane.current.rotateX(Math.PI);\n    fillPlane.current.position.y -= 0.00001;\n    shadowGroup.current.add(fillPlane.current);\n\n    // The camera to render the depth material from\n    shadowCamera.current = new OrthographicCamera(\n      -planeWidth / 2,\n      planeWidth / 2,\n      planeHeight / 2,\n      -planeHeight / 2,\n      0,\n      cameraHeight\n    );\n    // Get the camera to look up\n    shadowCamera.current.rotation.x = Math.PI / 2;\n    shadowGroup.current.add(shadowCamera.current);\n\n    // Like MeshDepthMaterial, but goes from black to transparent\n    depthMaterial.current = new MeshDepthMaterial();\n    depthMaterial.current.userData.darkness = { value: shadowDarkness };\n    depthMaterial.current.onBeforeCompile = shader => {\n      shader.uniforms.darkness = depthMaterial.current.userData.darkness;\n      shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n          'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n          'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `;\n    };\n    depthMaterial.current.depthTest = false;\n    depthMaterial.current.depthWrite = false;\n\n    horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader);\n    horizontalBlurMaterial.current.depthTest = false;\n\n    verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.current.depthTest = false;\n\n    const applyScreenTexture = async (texture, node) => {\n      texture.encoding = sRGBEncoding;\n      texture.minFilter = LinearFilter;\n      texture.magFilter = LinearFilter;\n      texture.flipY = false;\n      texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n      texture.generateMipmaps = false;\n\n      // Decode the texture to prevent jank on first render\n      await renderer.current.initTexture(texture);\n\n      node.material.color = new Color(0xffffff);\n      node.material.transparent = false;\n      node.material.map = texture;\n    };\n\n    // Build an array of promises to fetch and apply models & animations\n    const modelConfigPromises = models.map(async (model, index) => {\n      const { texture, position, url } = model;\n      let loadFullResTexture;\n\n      const [gltf, placeholder] = await Promise.all([\n        await modelLoader.current.loadAsync(url),\n        await textureLoader.current.loadAsync(texture.placeholder),\n      ]);\n\n      gltf.scene.traverse(async node => {\n        if (node.material) {\n          node.material.color = new Color(0x1f2025);\n          node.material.color.convertSRGBToLinear();\n        }\n\n        if (node.name === MeshType.Screen) {\n          applyScreenTexture(placeholder, node);\n          loadFullResTexture = async () => {\n            const image = await getImageFromSrcSet(texture);\n            const fullSize = await textureLoader.current.loadAsync(image);\n            await applyScreenTexture(fullSize, node);\n          };\n        }\n      });\n\n      modelGroup.current.add(gltf.scene);\n\n      const animation = getModelAnimation({\n        model,\n        gltf,\n        position,\n        reduceMotion,\n        renderFrame,\n        index,\n        showDelay,\n      });\n\n      return { ...animation, loadFullResTexture };\n    });\n\n    setModelData(modelConfigPromises);\n\n    return () => {\n      removeLights(lights.current);\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const blurShadow = useCallback(amount => {\n    blurPlane.current.visible = true;\n\n    // Blur horizontally and draw in the renderTargetBlur\n    blurPlane.current.material = horizontalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\n    horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTargetBlur.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    // Blur vertically and draw in the main renderTarget\n    blurPlane.current.material = verticalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\n    verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    blurPlane.current.visible = false;\n  }, []);\n\n  // Handle render passes for a single frame\n  const renderFrame = useCallback(() => {\n    const blurAmount = 5;\n\n    // Remove the background\n    const initialBackground = scene.current.background;\n    scene.current.background = null;\n\n    // Force the depthMaterial to everything\n    // cameraHelper.visible = false;\n    scene.current.overrideMaterial = depthMaterial.current;\n\n    // Render to the render target to get the depths\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(scene.current, shadowCamera.current);\n\n    // And reset the override material\n    scene.current.overrideMaterial = null;\n\n    blurShadow(blurAmount);\n\n    // A second pass to reduce the artifacts\n    // (0.4 is the minimum blur amout so that the artifacts are gone)\n    blurShadow(blurAmount * 0.4);\n\n    // Reset and render the normal scene\n    renderer.current.setRenderTarget(null);\n    scene.current.background = initialBackground;\n\n    renderer.current.render(scene.current, camera.current);\n  }, [blurShadow]);\n\n  useEffect(() => {\n    let introSprings = [];\n\n    if (!modelData) return;\n\n    scene.current.add(modelGroup.current);\n\n    const loadScene = async () => {\n      const loadedModels = await Promise.all(modelData);\n\n      setLoaded(true);\n\n      const handleModelLoad = loadedModels.map(async model => {\n        // Start animation\n        if (model.animation) {\n          const modelAnimation = model.animation.start(model.modelValue);\n          introSprings.push(modelAnimation);\n        }\n\n        if (reduceMotion) {\n          renderFrame();\n        }\n\n        // Load full res screen texture\n        await model.loadFullResTexture();\n\n        // Render the loaded texture\n        if (reduceMotion) {\n          renderFrame();\n        }\n      });\n\n      await Promise.all(handleModelLoad);\n    };\n\n    if (show) {\n      loadScene();\n    }\n\n    return () => {\n      for (const spring of introSprings) {\n        spring.stop();\n      }\n    };\n  }, [modelData, reduceMotion, renderFrame, show]);\n\n  // Handle mouse move animation\n  useEffect(() => {\n    let rotationSpring;\n    let rotationSpringValue;\n\n    const onMouseMove = event => {\n      const { rotation } = modelGroup.current;\n      const { innerWidth, innerHeight } = window;\n\n      const position = {\n        x: (event.clientX - innerWidth / 2) / innerWidth,\n        y: (event.clientY - innerHeight / 2) / innerHeight,\n      };\n\n      if (!rotationSpringValue) {\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\n          rotation.set(x, y, rotation.z);\n          renderFrame();\n        });\n      }\n\n      rotationSpring = spring({\n        from: rotationSpringValue.get(),\n        to: { x: position.y / 2, y: position.x / 2 },\n        stiffness: 40,\n        damping: 40,\n        velocity: rotationSpringValue.getVelocity(),\n        restSpeed: 0.00001,\n        mass: 1.4,\n      }).start(rotationSpringValue);\n    };\n\n    if (isInViewport && !reduceMotion) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      rotationSpring?.stop();\n    };\n  }, [isInViewport, reduceMotion, renderFrame]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (!container.current) return;\n\n      const { clientWidth, clientHeight } = container.current;\n\n      renderer.current.setSize(clientWidth, clientHeight);\n      camera.current.aspect = clientWidth / clientHeight;\n      camera.current.updateProjectionMatrix();\n\n      renderFrame();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [renderFrame]);\n\n  return (\n    <div\n      className={classNames('model', { 'model--loaded': loaded }, className)}\n      style={{ '--delay': numToMs(showDelay), ...style }}\n      ref={container}\n      role=\"img\"\n      aria-label={alt}\n      {...rest}\n    >\n      <canvas className=\"model__canvas\" ref={canvas} />\n    </div>\n  );\n};\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n  const positionVector = new Vector3(\n    model.position.x,\n    model.position.y,\n    model.position.z\n  );\n\n  if (reduceMotion) {\n    gltf.scene.position.set(...positionVector.toArray());\n    return;\n  }\n\n  // Simple slide up animation\n  if (model.animation === ModelAnimationType.SpringUp) {\n    const startPosition = new Vector3(\n      positionVector.x,\n      positionVector.y - 1,\n      positionVector.z\n    );\n    const endPosition = positionVector;\n\n    gltf.scene.position.set(...startPosition.toArray());\n\n    const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n      gltf.scene.position.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay * 0.6),\n      spring({\n        from: startPosition,\n        to: endPosition,\n        stiffness: 60,\n        damping: 16,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n\n  // Laptop open animation\n  if (model.animation === ModelAnimationType.LaptopOpen) {\n    const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame);\n    const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0);\n    const endRotation = new Vector3(0, 0, 0);\n\n    gltf.scene.position.set(...positionVector.toArray());\n    frameNode.rotation.set(...startRotation.toArray());\n\n    const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n      frameNode.rotation.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay + 200),\n      spring({\n        from: startRotation,\n        to: endRotation,\n        stiffness: 50,\n        damping: 14,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n}\n\nexport default Model;\n","import classNames from 'classnames';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst Divider = ({\n  lineWidth,\n  lineHeight,\n  notchWidth,\n  notchHeight,\n  collapseDelay,\n  collapsed,\n  className,\n  style,\n}) => (\n  <div\n    className={classNames('divider', className)}\n    style={{\n      '--lineWidth': lineWidth,\n      '--lineHeight': lineHeight,\n      '--notchWidth': notchWidth,\n      '--notchHeight': notchHeight,\n      '--collapseDelay': numToMs(collapseDelay),\n      ...style,\n    }}\n  >\n    <div\n      className={classNames('divider__line', { 'divider__line--collapsed': collapsed })}\n    />\n    <div\n      className={classNames('divider__notch', { 'divider__notch--collapsed': collapsed })}\n      style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n    />\n  </div>\n);\n\nDivider.defaultProps = {\n  lineWidth: '100%',\n  lineHeight: '2px',\n  notchWidth: '90px',\n  notchHeight: '10px',\n  collapsed: false,\n  collapseDelay: 0,\n};\n\nexport default Divider;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport Section from 'components/Section';\nimport { Button } from 'components/Button';\nimport Model from 'components/Model';\nimport Divider from 'components/Divider';\nimport { useWindowSize } from 'hooks';\nimport { reflow, isVisible } from 'utils/transition';\nimport { media } from 'utils/style';\nimport deviceModels from 'components/Model/deviceModels';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProjectSummary = ({\n  id,\n  visible,\n  sectionRef,\n  index,\n  title,\n  description,\n  model,\n  buttonText,\n  buttonLink,\n  alternate,\n  ...rest\n}) => {\n  const { width } = useWindowSize();\n  const titleId = `${id}-title`;\n  const isMobile = width <= media.tablet;\n  const indexText = index < 10 ? `0${index}` : index;\n  const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`;\n  const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`;\n\n  const renderDetails = status => (\n    <div className=\"project-summary__details\">\n      <div aria-hidden className=\"project-summary__index\">\n        <Divider\n          notchWidth=\"64px\"\n          notchHeight=\"8px\"\n          collapsed={status !== 'entered'}\n          collapseDelay={1000}\n        />\n        <span\n          className={classNames(\n            'project-summary__index-number',\n            `project-summary__index-number--${status}`\n          )}\n        >\n          {indexText}\n        </span>\n      </div>\n      <Heading\n        level={3}\n        as=\"h2\"\n        className={classNames(\n          'project-summary__title',\n          `project-summary__title--${status}`\n        )}\n        id={titleId}\n      >\n        {title}\n      </Heading>\n      <Text\n        className={classNames(\n          'project-summary__description',\n          `project-summary__description--${status}`\n        )}\n      >\n        {description}\n      </Text>\n      <div\n        className={classNames(\n          'project-summary__button',\n          `project-summary__button--${status}`\n        )}\n      >\n        <Button iconHoverShift href={buttonLink} iconEnd=\"arrowRight\">\n          {buttonText}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderPreview = status => (\n    <div className=\"project-summary__preview\">\n      {model.type === 'laptop' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--laptop'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 8 }}\n            showDelay={800}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.laptop,\n                texture: {\n                  ...model.textures[0],\n                  sizes: laptopSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n      {model.type === 'phone' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--phone'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n            showDelay={500}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.phone,\n                position: { x: -0.6, y: 1.1, z: 0 },\n                texture: {\n                  ...model.textures[0],\n                  sizes: phoneSizes,\n                },\n              },\n              {\n                ...deviceModels.phone,\n                position: { x: 0.6, y: -0.5, z: 0.3 },\n                texture: {\n                  ...model.textures[1],\n                  sizes: phoneSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n\n  return (\n    <Section\n      className={classNames('project-summary', {\n        'project-summary--alternate': alternate,\n        'project-summary--first': index === '01',\n      })}\n      as=\"section\"\n      aria-labelledby={titleId}\n      ref={sectionRef}\n      id={id}\n      tabIndex={-1}\n      {...rest}\n    >\n      <div className=\"project-summary__content\">\n        <Transition in={visible} timeout={0} onEnter={reflow}>\n          {status => (\n            <Fragment>\n              {!alternate && !isMobile && (\n                <Fragment>\n                  {renderDetails(status)}\n                  {renderPreview(status)}\n                </Fragment>\n              )}\n              {(alternate || isMobile) && (\n                <Fragment>\n                  {renderPreview(status)}\n                  {renderDetails(status)}\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Transition>\n      </div>\n    </Section>\n  );\n};\n\nexport default ProjectSummary;\n","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport Heading from 'components/Heading';\nimport Section from 'components/Section';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport Icon from 'components/Icon';\nimport './index.css';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n  const theme = useTheme();\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\n  const windowSize = useWindowSize();\n  const prevTheme = usePrevious(theme);\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\n    ', and '\n  );\n  const currentDisciplines = disciplines.filter(\n    (item, index) => index === disciplineIndex\n  );\n  const titleId = `${id}-title`;\n\n  useInterval(\n    () => {\n      const index = (disciplineIndex + 1) % disciplines.length;\n      setDisciplineIndex(index);\n    },\n    5000,\n    theme.themeId\n  );\n\n  useEffect(() => {\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\n      setDisciplineIndex(0);\n    }\n  }, [theme.themeId, prevTheme]);\n\n  return (\n    <Section\n      className=\"intro\"\n      as=\"section\"\n      ref={sectionRef}\n      id={id}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n      {...rest}\n    >\n      <Transition\n        key={theme.themeId}\n        appear={!prerender}\n        in={!prerender}\n        timeout={3000}\n        onEnter={reflow}\n      >\n        {status => (\n          <Fragment>\n            {!prerender && (\n              <Suspense fallback={null}>\n                <DisplacementSphere />\n              </Suspense>\n            )}\n            <header className=\"intro__text\">\n              <h1\n                className={classNames('intro__name', `intro__name--${status}`)}\n                id={titleId}\n              >\n                <DecoderText text=\"Alan Qiming Liu\" start={!prerender} delay={300} />\n              </h1>\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\n                <VisuallyHidden className=\"intro__title-label\">{`Web Developer + ${introLabel}`}</VisuallyHidden>\n                <span\n                  aria-hidden\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                >\n                  <span\n                    className={classNames(\n                      'intro__title-word',\n                      `intro__title-word--${status}`\n                    )}\n                    style={{ '--delay': tokens.base.durationXS }}\n                  >\n                    Full Stack<br></br>\n                    Web Developer\n                  </span>\n                </span>\n                <TransitionGroup\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                  component=\"span\"\n                >\n                  {currentDisciplines.map(item => (\n                    <Transition\n                      appear\n                      timeout={{ enter: 3000, exit: 2000 }}\n                      key={item}\n                      onEnter={reflow}\n                    >\n                      {wordStatus => (\n                        <span\n                          aria-hidden\n                          className={classNames(\n                            'intro__title-word',\n                            'intro__title-word--plus',\n                            `intro__title-word--${wordStatus}`\n                          )}\n                          style={{ '--delay': tokens.base.durationL }}\n                        >\n                          {item}\n                        </span>\n                      )}\n                    </Transition>\n                  ))}\n                </TransitionGroup>\n              </Heading>\n            </header>\n            {windowSize.width > media.tablet && (\n              <div\n                className={classNames(\n                  'intro__scroll-indicator',\n                  `intro__scroll-indicator--${status}`,\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n                status={status}\n              />\n            )}\n            {windowSize.width <= media.tablet && (\n              <div\n                className={classNames(\n                  'intro__mobile-scroll-indicator',\n                  `intro__mobile-scroll-indicator--${status}`,\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n              >\n                <Icon icon=\"arrowDown\" aria-hidden />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Transition>\n    </Section>\n  );\n}\n\nexport default Intro;\n","import './index.css';\n\nimport Seen1 from 'assets/seen1.jpg';\nimport Seen2 from 'assets/seen2.jpg';\nimport WebSubtitlePlayer from 'assets/websubtitleplayer.png';\nimport MyGuard1 from 'assets/myguard1.jpg';\nimport MyGuard2 from 'assets/myguard2.jpg';\nimport BattleKnight from 'assets/battleknight.jpg';\n\nimport phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\nimport Footer from 'components/Footer';\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\n\nimport Profile from 'combination/Profile';\nimport ProjectSummary from 'combination/ProjectSummary';\nimport Intro from 'combination/Intro';\n\nimport { disciplines } from 'app/config';\n\nconst Home = () => {\n  const { status } = useRouteTransition();\n  const { hash, state } = useLocation();\n  const initHash = useRef(true);\n  const [visibleSections, setVisibleSections] = useState([]);\n  const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false);\n  const intro = useRef();\n  const projectOne = useRef();\n  const projectTwo = useRef();\n  const projectThree = useRef();\n  const projectFour = useRef();\n  const about = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const revealSections = [\n      intro,\n      projectOne,\n      projectTwo,\n      projectThree,\n      projectFour,\n      about,\n    ];\n\n    const sectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const section = entry.target;\n            observer.unobserve(section);\n            if (visibleSections.includes(section)) return;\n            setVisibleSections(prevSections => [...prevSections, section]);\n          }\n        });\n      },\n      { rootMargin: '0px 0px -10% 0px' }\n    );\n\n    const indicatorObserver = new IntersectionObserver(\n      ([entry]) => {\n        setScrollIndicatorHidden(!entry.isIntersecting);\n      },\n      { rootMargin: '-100% 0px 0px 0px' }\n    );\n\n    revealSections.forEach(section => {\n      sectionObserver.observe(section.current);\n    });\n\n    indicatorObserver.observe(intro.current);\n\n    return () => {\n      sectionObserver.disconnect();\n      indicatorObserver.disconnect();\n    };\n  }, [visibleSections]);\n\n  useEffect(() => {\n    const hasEntered = status === 'entered';\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\n    let scrollObserver;\n    let scrollTimeout;\n\n    const handleHashchange = (hash, scroll) => {\n      clearTimeout(scrollTimeout);\n      const hashSections = [intro, projectOne, about];\n      const hashString = hash.replace('#', '');\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\n      if (!element) return;\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\n      const top = element.current.offsetTop;\n\n      scrollObserver = new IntersectionObserver(\n        (entries, observer) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            scrollTimeout = setTimeout(\n              () => {\n                element.current.focus();\n              },\n              prefersReducedMotion ? 0 : 400\n            );\n            observer.unobserve(entry.target);\n          }\n        },\n        { rootMargin: '-20% 0px -20% 0px' }\n      );\n\n      scrollObserver.observe(element.current);\n\n      if (supportsNativeSmoothScroll) {\n        window.scroll({\n          top,\n          left: 0,\n          behavior,\n        });\n      } else {\n        window.scrollTo(0, top);\n      }\n    };\n\n    if (hash && initHash.current && hasEntered) {\n      handleHashchange(hash, false);\n      initHash.current = false;\n    } else if (!hash && initHash.current && hasEntered) {\n      window.scrollTo(0, 0);\n      initHash.current = false;\n    } else if (hasEntered) {\n      handleHashchange(hash, true);\n    }\n\n    return () => {\n      clearTimeout(scrollTimeout);\n      if (scrollObserver) {\n        scrollObserver.disconnect();\n      }\n    };\n  }, [hash, state, prefersReducedMotion, status]);\n\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>Qiming Liu | Web Developer</title>\n        <link rel=\"prefetch\" href={phone} as=\"fetch\" />\n        <link rel=\"prefetch\" href={laptop} as=\"fetch\" />\n      </Helmet>\n      <Intro\n        id=\"intro\"\n        sectionRef={intro}\n        disciplines={disciplines}\n        scrollIndicatorHidden={scrollIndicatorHidden}\n      />\n      <ProjectSummary\n        id=\"project\"\n        alternate\n        sectionRef={projectOne}\n        visible={visibleSections.includes(projectOne.current)}\n        index={1}\n        title=\"Android Native App - Seen\"\n        description=\"An easy forum Android app include instant messaging.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          textures: [\n            {\n              src: Seen1,\n              srcSet: `${Seen1} 254w, ${Seen1} 508w`,\n              placeholder: Seen1,\n            },\n            {\n              src: Seen2,\n              srcSet: `${Seen2} 254w, ${Seen2} 508w`,\n              placeholder: Seen2,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project2\"\n        sectionRef={projectTwo}\n        visible={visibleSections.includes(projectTwo.current)}\n        index={2}\n        title=\"Web Subtitle Player\"\n        description=\"A Local Web .srt (Subtitle) File Player. You can pause, play and adjust the font size.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/WebSubtitlePlayer\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: WebSubtitlePlayer,\n              srcSet: `${WebSubtitlePlayer} 980w, ${WebSubtitlePlayer} 1376w`,\n              placeholder: WebSubtitlePlayer,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project3\"\n        alternate\n        sectionRef={projectThree}\n        visible={visibleSections.includes(projectThree.current)}\n        index={3}\n        title=\"MyGuard\"\n        description=\"Raspberry Pi - Android - Sensor: Indoor Surveillance System (Firebase, Tensorflow.js, Cordova, cdnVue2)\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          alt: 'App login screen',\n          textures: [\n            {\n              src: MyGuard2,\n              srcSet: `${MyGuard2} 254w, ${MyGuard2} 508w`,\n              placeholder: MyGuard2,\n            },\n            {\n              src: MyGuard1,\n              srcSet: `${MyGuard1} 254w, ${MyGuard1} 508w`,\n              placeholder: MyGuard1,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project4\"\n        sectionRef={projectFour}\n        visible={visibleSections.includes(projectFour.current)}\n        index={4}\n        title=\"Battle Knight\"\n        description=\"Phaser3 Web 2D Game\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/BattleKnight\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: BattleKnight,\n              srcSet: `${BattleKnight} 980w, ${BattleKnight} 1376w`,\n              placeholder: BattleKnight,\n            },\n          ],\n        }}\n      />\n      <Profile\n        id=\"about\"\n        sectionRef={about}\n        visible={visibleSections.includes(about.current)}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport './index.css';\n\n// prettier-ignore\nconst glyphs = [\n  'ア', 'イ', 'ウ', 'エ', 'オ',\n  'カ', 'キ', 'ク', 'ケ', 'コ',\n  'サ', 'シ', 'ス', 'セ', 'ソ',\n  'タ', 'チ', 'ツ', 'テ', 'ト',\n  'ナ', 'ニ', 'ヌ', 'ネ', 'ノ',\n  'ハ', 'ヒ', 'フ', 'ヘ', 'ホ',\n  'マ', 'ミ', 'ム', 'メ', 'モ',\n  'ヤ', 'ユ', 'ヨ', 'ー',\n  'ラ', 'リ', 'ル', 'レ', 'ロ',\n  'ワ', 'ヰ', 'ヱ', 'ヲ', 'ン',\n  'ガ', 'ギ', 'グ', 'ゲ', 'ゴ',\n  'ザ', 'ジ', 'ズ', 'ゼ', 'ゾ',\n  'ダ', 'ヂ', 'ヅ', 'デ', 'ド',\n  'バ', 'ビ', 'ブ', 'ベ', 'ボ',\n  'パ', 'ピ', 'プ', 'ペ', 'ポ',\n];\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphs.length);\n      return { type: CharType.Glyph, value: glyphs[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n"],"sourceRoot":""}