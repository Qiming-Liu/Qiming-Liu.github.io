{"version":3,"file":"static/js/647.45a7fcf7.chunk.js","mappings":"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","sources":["components/DecoderText/index.js","components/Footer/index.js","components/Heading/index.js","components/Image/index.js","components/Section/index.js","components/Text/index.js","combination/Profile/index.js","components/Model/deviceModels.js","components/Model/index.js","components/Divider/index.js","combination/ProjectSummary/index.js","combination/Intro/index.js","pages/Home/index.js","utils/image.js","utils/prerender.js","utils/three.js","webpack://qiming-liu.github.io/./src/pages/Home/index.css?e207"],"sourcesContent":["import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport { glyphList } from 'app/config';\nimport './index.css';\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphList.length);\n      return { type: CharType.Glyph, value: glyphList[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","import './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">{`© ${new Date().getFullYear()} Qiming Liu`}</span>\n  </footer>\n);\n\nexport default Footer;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport Image from 'components/Image';\nimport Section from 'components/Section';\nimport ProfileImg from 'assets/profile.jpg';\nimport { reflow } from 'utils/transition';\nimport { media } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProfileText = ({ status, titleId }) => (\n  <Fragment>\n    <Heading\n      className={classNames('profile__title', `profile__title--${status}`)}\n      level={3}\n      id={titleId}\n    >\n      <DecoderText text=\"Hi there\" start={status !== 'exited'} delay={500} />\n    </Heading>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I'm an active Open-source contributor of Cross-platform Terminal Tabby and Microsoft's DefinitelyTyped. \n      Develop fantastic features with over 200+ stars on Github. Implemented front-end and back-end CI/CD pipeline, containerize and monitor web application with Docker and Grafana. \n    </Text>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I love coding. I am currently learning Unity and preparing for the AWS certification exam.\n    </Text>\n  </Fragment>\n);\n\nconst Profile = ({ id, visible, sectionRef }) => {\n  const titleId = `${id}-title`;\n\n  return (\n    <Section\n      className=\"profile\"\n      as=\"section\"\n      id={id}\n      ref={sectionRef}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n    >\n      <Transition in={visible} timeout={0} onEnter={reflow}>\n        {status => (\n          <div className=\"profile__content\">\n            <div className=\"profile__column\">\n              <ProfileText status={status} titleId={titleId} />\n            </div>\n            <div className=\"profile__column\">\n              <div className=\"profile__image-wrapper\">\n                <Image\n                  reveal\n                  delay={100}\n                  srcSet={`${ProfileImg} 480w, ${ProfileImg} 960w`}\n                  sizes={`(max-width: ${media.mobile}px) 100vw, 480px`}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Transition>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\n\nexport const ModelAnimationType = {\n  SpringUp: 'spring-up',\n  LaptopOpen: 'laptop-open',\n};\n\nconst models = {\n  phone: {\n    url: phone,\n    width: 374,\n    height: 512,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.SpringUp,\n  },\n  laptop: {\n    url: laptop,\n    width: 1280,\n    height: 800,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.LaptopOpen,\n  },\n};\n\nexport default models;\n","import { useEffect, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  sRGBEncoding,\n  LinearFilter,\n  Color,\n  TextureLoader,\n  Vector3,\n  MathUtils,\n  Group,\n  AmbientLight,\n  DirectionalLight,\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderTarget,\n  PlaneBufferGeometry,\n  MeshBasicMaterial,\n  Mesh,\n  OrthographicCamera,\n  MeshDepthMaterial,\n  ShaderMaterial,\n} from 'three';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { delay, chain, spring, value } from 'popmotion';\nimport { getImageFromSrcSet } from 'utils/image';\nimport { useInViewport, usePrefersReducedMotion } from 'hooks';\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\nimport { ModelAnimationType } from './deviceModels';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst MeshType = {\n  Frame: 'Frame',\n  Logo: 'Logo',\n  Screen: 'Screen',\n};\n\nconst Model = ({\n  models,\n  show = true,\n  showDelay = 0,\n  cameraPosition = { x: 0, y: 0, z: 8 },\n  enableControls,\n  style,\n  className,\n  alt,\n  ...rest\n}) => {\n  const [modelData, setModelData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const container = useRef();\n  const canvas = useRef();\n  const camera = useRef();\n  const textureLoader = useRef();\n  const modelLoader = useRef();\n  const modelGroup = useRef();\n  const scene = useRef();\n  const renderer = useRef();\n  const shadowGroup = useRef();\n  const renderTarget = useRef();\n  const renderTargetBlur = useRef();\n  const shadowCamera = useRef();\n  const depthMaterial = useRef();\n  const horizontalBlurMaterial = useRef();\n  const verticalBlurMaterial = useRef();\n  const plane = useRef();\n  const lights = useRef();\n  const blurPlane = useRef();\n  const fillPlane = useRef();\n  const isInViewport = useInViewport(container, false, { threshold: 0.4 });\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = container.current;\n\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      alpha: true,\n      antialias: false,\n      powerPreference: 'high-performance',\n    });\n\n    renderer.current.setPixelRatio(2);\n    renderer.current.setSize(clientWidth, clientHeight);\n    renderer.current.outputEncoding = sRGBEncoding;\n    renderer.current.physicallyCorrectLights = true;\n\n    camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\n    camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n    scene.current = new Scene();\n\n    textureLoader.current = new TextureLoader();\n    modelLoader.current = new GLTFLoader();\n    modelGroup.current = new Group();\n\n    // Lighting\n    const ambientLight = new AmbientLight(0xffffff, 1.2);\n    const keyLight = new DirectionalLight(0xffffff, 1.1);\n    const fillLight = new DirectionalLight(0xffffff, 0.8);\n\n    fillLight.position.set(-6, 2, 2);\n    keyLight.position.set(0.5, 0, 0.866);\n    lights.current = [ambientLight, keyLight, fillLight];\n    lights.current.forEach(light => scene.current.add(light));\n\n    // The shadow container, if you need to move the plane just move this\n    shadowGroup.current = new Group();\n    scene.current.add(shadowGroup.current);\n    shadowGroup.current.position.set(0, 0, -0.8);\n    shadowGroup.current.rotateX(Math.PI / 2);\n\n    const renderTargetSize = 512;\n    const planeWidth = 8;\n    const planeHeight = 8;\n    const cameraHeight = 1.5;\n    const shadowOpacity = 0.8;\n    const shadowDarkness = 3;\n\n    // The render target that will show the shadows in the plane texture\n    renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTarget.current.texture.generateMipmaps = false;\n\n    // The render target that we will use to blur the first render target\n    renderTargetBlur.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTargetBlur.current.texture.generateMipmaps = false;\n\n    // Make a plane and make it face up\n    const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n      Math.PI / 2\n    );\n\n    const planeMaterial = new MeshBasicMaterial({\n      map: renderTarget.current.texture,\n      opacity: shadowOpacity,\n      transparent: true,\n    });\n\n    plane.current = new Mesh(planeGeometry, planeMaterial);\n    // The y from the texture is flipped!\n    plane.current.scale.y = -1;\n    shadowGroup.current.add(plane.current);\n\n    // The plane onto which to blur the texture\n    blurPlane.current = new Mesh(planeGeometry);\n    blurPlane.current.visible = false;\n    shadowGroup.current.add(blurPlane.current);\n\n    // The plane with the color of the ground\n    const fillMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      opacity: 0,\n      transparent: true,\n    });\n\n    fillPlane.current = new Mesh(planeGeometry, fillMaterial);\n    fillPlane.current.rotateX(Math.PI);\n    fillPlane.current.position.y -= 0.00001;\n    shadowGroup.current.add(fillPlane.current);\n\n    // The camera to render the depth material from\n    shadowCamera.current = new OrthographicCamera(\n      -planeWidth / 2,\n      planeWidth / 2,\n      planeHeight / 2,\n      -planeHeight / 2,\n      0,\n      cameraHeight\n    );\n    // Get the camera to look up\n    shadowCamera.current.rotation.x = Math.PI / 2;\n    shadowGroup.current.add(shadowCamera.current);\n\n    // Like MeshDepthMaterial, but goes from black to transparent\n    depthMaterial.current = new MeshDepthMaterial();\n    depthMaterial.current.userData.darkness = { value: shadowDarkness };\n    depthMaterial.current.onBeforeCompile = shader => {\n      shader.uniforms.darkness = depthMaterial.current.userData.darkness;\n      shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n          'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n          'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `;\n    };\n    depthMaterial.current.depthTest = false;\n    depthMaterial.current.depthWrite = false;\n\n    horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader);\n    horizontalBlurMaterial.current.depthTest = false;\n\n    verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.current.depthTest = false;\n\n    const applyScreenTexture = async (texture, node) => {\n      texture.encoding = sRGBEncoding;\n      texture.minFilter = LinearFilter;\n      texture.magFilter = LinearFilter;\n      texture.flipY = false;\n      texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n      texture.generateMipmaps = false;\n\n      // Decode the texture to prevent jank on first render\n      await renderer.current.initTexture(texture);\n\n      node.material.color = new Color(0xffffff);\n      node.material.transparent = false;\n      node.material.map = texture;\n    };\n\n    // Build an array of promises to fetch and apply models & animations\n    const modelConfigPromises = models.map(async (model, index) => {\n      const { texture, position, url } = model;\n      let loadFullResTexture;\n\n      const [gltf, placeholder] = await Promise.all([\n        await modelLoader.current.loadAsync(url),\n        await textureLoader.current.loadAsync(texture.placeholder),\n      ]);\n\n      gltf.scene.traverse(async node => {\n        if (node.material) {\n          node.material.color = new Color(0x1f2025);\n          node.material.color.convertSRGBToLinear();\n        }\n\n        if (node.name === MeshType.Screen) {\n          applyScreenTexture(placeholder, node);\n          loadFullResTexture = async () => {\n            const image = await getImageFromSrcSet(texture);\n            const fullSize = await textureLoader.current.loadAsync(image);\n            await applyScreenTexture(fullSize, node);\n          };\n        }\n      });\n\n      modelGroup.current.add(gltf.scene);\n\n      const animation = getModelAnimation({\n        model,\n        gltf,\n        position,\n        reduceMotion,\n        renderFrame,\n        index,\n        showDelay,\n      });\n\n      return { ...animation, loadFullResTexture };\n    });\n\n    setModelData(modelConfigPromises);\n\n    return () => {\n      removeLights(lights.current);\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const blurShadow = useCallback(amount => {\n    blurPlane.current.visible = true;\n\n    // Blur horizontally and draw in the renderTargetBlur\n    blurPlane.current.material = horizontalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\n    horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTargetBlur.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    // Blur vertically and draw in the main renderTarget\n    blurPlane.current.material = verticalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\n    verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    blurPlane.current.visible = false;\n  }, []);\n\n  // Handle render passes for a single frame\n  const renderFrame = useCallback(() => {\n    const blurAmount = 5;\n\n    // Remove the background\n    const initialBackground = scene.current.background;\n    scene.current.background = null;\n\n    // Force the depthMaterial to everything\n    // cameraHelper.visible = false;\n    scene.current.overrideMaterial = depthMaterial.current;\n\n    // Render to the render target to get the depths\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(scene.current, shadowCamera.current);\n\n    // And reset the override material\n    scene.current.overrideMaterial = null;\n\n    blurShadow(blurAmount);\n\n    // A second pass to reduce the artifacts\n    // (0.4 is the minimum blur amout so that the artifacts are gone)\n    blurShadow(blurAmount * 0.4);\n\n    // Reset and render the normal scene\n    renderer.current.setRenderTarget(null);\n    scene.current.background = initialBackground;\n\n    renderer.current.render(scene.current, camera.current);\n  }, [blurShadow]);\n\n  useEffect(() => {\n    let introSprings = [];\n\n    if (!modelData) return;\n\n    scene.current.add(modelGroup.current);\n\n    const loadScene = async () => {\n      const loadedModels = await Promise.all(modelData);\n\n      setLoaded(true);\n\n      const handleModelLoad = loadedModels.map(async model => {\n        // Start animation\n        if (model.animation) {\n          const modelAnimation = model.animation.start(model.modelValue);\n          introSprings.push(modelAnimation);\n        }\n\n        if (reduceMotion) {\n          renderFrame();\n        }\n\n        // Load full res screen texture\n        await model.loadFullResTexture();\n\n        // Render the loaded texture\n        if (reduceMotion) {\n          renderFrame();\n        }\n      });\n\n      await Promise.all(handleModelLoad);\n    };\n\n    if (show) {\n      loadScene();\n    }\n\n    return () => {\n      for (const spring of introSprings) {\n        spring.stop();\n      }\n    };\n  }, [modelData, reduceMotion, renderFrame, show]);\n\n  // Handle mouse move animation\n  useEffect(() => {\n    let rotationSpring;\n    let rotationSpringValue;\n\n    const onMouseMove = event => {\n      const { rotation } = modelGroup.current;\n      const { innerWidth, innerHeight } = window;\n\n      const position = {\n        x: (event.clientX - innerWidth / 2) / innerWidth,\n        y: (event.clientY - innerHeight / 2) / innerHeight,\n      };\n\n      if (!rotationSpringValue) {\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\n          rotation.set(x, y, rotation.z);\n          renderFrame();\n        });\n      }\n\n      rotationSpring = spring({\n        from: rotationSpringValue.get(),\n        to: { x: position.y / 2, y: position.x / 2 },\n        stiffness: 40,\n        damping: 40,\n        velocity: rotationSpringValue.getVelocity(),\n        restSpeed: 0.00001,\n        mass: 1.4,\n      }).start(rotationSpringValue);\n    };\n\n    if (isInViewport && !reduceMotion) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      rotationSpring?.stop();\n    };\n  }, [isInViewport, reduceMotion, renderFrame]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (!container.current) return;\n\n      const { clientWidth, clientHeight } = container.current;\n\n      renderer.current.setSize(clientWidth, clientHeight);\n      camera.current.aspect = clientWidth / clientHeight;\n      camera.current.updateProjectionMatrix();\n\n      renderFrame();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [renderFrame]);\n\n  return (\n    <div\n      className={classNames('model', { 'model--loaded': loaded }, className)}\n      style={{ '--delay': numToMs(showDelay), ...style }}\n      ref={container}\n      role=\"img\"\n      aria-label={alt}\n      {...rest}\n    >\n      <canvas className=\"model__canvas\" ref={canvas} />\n    </div>\n  );\n};\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n  const positionVector = new Vector3(\n    model.position.x,\n    model.position.y,\n    model.position.z\n  );\n\n  if (reduceMotion) {\n    gltf.scene.position.set(...positionVector.toArray());\n    return;\n  }\n\n  // Simple slide up animation\n  if (model.animation === ModelAnimationType.SpringUp) {\n    const startPosition = new Vector3(\n      positionVector.x,\n      positionVector.y - 1,\n      positionVector.z\n    );\n    const endPosition = positionVector;\n\n    gltf.scene.position.set(...startPosition.toArray());\n\n    const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n      gltf.scene.position.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay * 0.6),\n      spring({\n        from: startPosition,\n        to: endPosition,\n        stiffness: 60,\n        damping: 16,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n\n  // Laptop open animation\n  if (model.animation === ModelAnimationType.LaptopOpen) {\n    const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame);\n    const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0);\n    const endRotation = new Vector3(0, 0, 0);\n\n    gltf.scene.position.set(...positionVector.toArray());\n    frameNode.rotation.set(...startRotation.toArray());\n\n    const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n      frameNode.rotation.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay + 200),\n      spring({\n        from: startRotation,\n        to: endRotation,\n        stiffness: 50,\n        damping: 14,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n}\n\nexport default Model;\n","import classNames from 'classnames';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst Divider = ({\n  lineWidth,\n  lineHeight,\n  notchWidth,\n  notchHeight,\n  collapseDelay,\n  collapsed,\n  className,\n  style,\n}) => (\n  <div\n    className={classNames('divider', className)}\n    style={{\n      '--lineWidth': lineWidth,\n      '--lineHeight': lineHeight,\n      '--notchWidth': notchWidth,\n      '--notchHeight': notchHeight,\n      '--collapseDelay': numToMs(collapseDelay),\n      ...style,\n    }}\n  >\n    <div\n      className={classNames('divider__line', { 'divider__line--collapsed': collapsed })}\n    />\n    <div\n      className={classNames('divider__notch', { 'divider__notch--collapsed': collapsed })}\n      style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n    />\n  </div>\n);\n\nDivider.defaultProps = {\n  lineWidth: '100%',\n  lineHeight: '2px',\n  notchWidth: '90px',\n  notchHeight: '10px',\n  collapsed: false,\n  collapseDelay: 0,\n};\n\nexport default Divider;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport Section from 'components/Section';\nimport { Button } from 'components/Button';\nimport Model from 'components/Model';\nimport Divider from 'components/Divider';\nimport { useWindowSize } from 'hooks';\nimport { reflow, isVisible } from 'utils/transition';\nimport { media } from 'utils/style';\nimport deviceModels from 'components/Model/deviceModels';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProjectSummary = ({\n  id,\n  visible,\n  sectionRef,\n  index,\n  title,\n  description,\n  model,\n  buttonText,\n  buttonLink,\n  alternate,\n  ...rest\n}) => {\n  const { width } = useWindowSize();\n  const titleId = `${id}-title`;\n  const isMobile = width <= media.tablet;\n  const indexText = index < 10 ? `0${index}` : index;\n  const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`;\n  const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`;\n\n  const renderDetails = status => (\n    <div className=\"project-summary__details\">\n      <div aria-hidden className=\"project-summary__index\">\n        <Divider\n          notchWidth=\"64px\"\n          notchHeight=\"8px\"\n          collapsed={status !== 'entered'}\n          collapseDelay={1000}\n        />\n        <span\n          className={classNames(\n            'project-summary__index-number',\n            `project-summary__index-number--${status}`\n          )}\n        >\n          {indexText}\n        </span>\n      </div>\n      <Heading\n        level={3}\n        as=\"h2\"\n        className={classNames(\n          'project-summary__title',\n          `project-summary__title--${status}`\n        )}\n        id={titleId}\n      >\n        {title}\n      </Heading>\n      <Text\n        className={classNames(\n          'project-summary__description',\n          `project-summary__description--${status}`\n        )}\n      >\n        {description}\n      </Text>\n      <div\n        className={classNames(\n          'project-summary__button',\n          `project-summary__button--${status}`\n        )}\n      >\n        <Button iconHoverShift href={buttonLink} iconEnd=\"arrowRight\">\n          {buttonText}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderPreview = status => (\n    <div className=\"project-summary__preview\">\n      {model.type === 'laptop' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--laptop'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 8 }}\n            showDelay={800}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.laptop,\n                texture: {\n                  ...model.textures[0],\n                  sizes: laptopSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n      {model.type === 'phone' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--phone'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n            showDelay={500}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.phone,\n                position: { x: -0.6, y: 1.1, z: 0 },\n                texture: {\n                  ...model.textures[0],\n                  sizes: phoneSizes,\n                },\n              },\n              {\n                ...deviceModels.phone,\n                position: { x: 0.6, y: -0.5, z: 0.3 },\n                texture: {\n                  ...model.textures[1],\n                  sizes: phoneSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n\n  return (\n    <Section\n      className={classNames('project-summary', {\n        'project-summary--alternate': alternate,\n        'project-summary--first': index === '01',\n      })}\n      as=\"section\"\n      aria-labelledby={titleId}\n      ref={sectionRef}\n      id={id}\n      tabIndex={-1}\n      {...rest}\n    >\n      <div className=\"project-summary__content\">\n        <Transition in={visible} timeout={0} onEnter={reflow}>\n          {status => (\n            <Fragment>\n              {!alternate && !isMobile && (\n                <Fragment>\n                  {renderDetails(status)}\n                  {renderPreview(status)}\n                </Fragment>\n              )}\n              {(alternate || isMobile) && (\n                <Fragment>\n                  {renderPreview(status)}\n                  {renderDetails(status)}\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Transition>\n      </div>\n    </Section>\n  );\n};\n\nexport default ProjectSummary;\n","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport Heading from 'components/Heading';\nimport Section from 'components/Section';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport Icon from 'components/Icon';\nimport './index.css';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n  const theme = useTheme();\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\n  const windowSize = useWindowSize();\n  const prevTheme = usePrevious(theme);\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\n    ', and '\n  );\n  const currentDisciplines = disciplines.filter(\n    (item, index) => index === disciplineIndex\n  );\n  const titleId = `${id}-title`;\n\n  useInterval(\n    () => {\n      const index = (disciplineIndex + 1) % disciplines.length;\n      setDisciplineIndex(index);\n    },\n    5000,\n    theme.themeId\n  );\n\n  useEffect(() => {\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\n      setDisciplineIndex(0);\n    }\n  }, [theme.themeId, prevTheme]);\n\n  return (\n    <Section\n      className=\"intro\"\n      as=\"section\"\n      ref={sectionRef}\n      id={id}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n      {...rest}\n    >\n      <Transition\n        key={theme.themeId}\n        appear={!prerender}\n        in={!prerender}\n        timeout={3000}\n        onEnter={reflow}\n      >\n        {status => (\n          <Fragment>\n            {!prerender && (\n              <Suspense fallback={null}>\n                <DisplacementSphere />\n              </Suspense>\n            )}\n            <header className=\"intro__text\">\n              <h1\n                className={classNames('intro__name', `intro__name--${status}`)}\n                id={titleId}\n              >\n                <DecoderText text=\"Alan Qiming Liu\" start={!prerender} delay={300} />\n              </h1>\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\n                <VisuallyHidden className=\"intro__title-label\">{`Web Developer + ${introLabel}`}</VisuallyHidden>\n                <span\n                  aria-hidden\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                >\n                  <span\n                    className={classNames(\n                      'intro__title-word',\n                      `intro__title-word--${status}`,\n                    )}\n                    style={{ '--delay': tokens.base.durationXS }}\n                  >\n                    Full Stack Developer\n                  </span>\n                </span>\n                <TransitionGroup\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                  component=\"span\"\n                >\n                  {currentDisciplines.map(item => (\n                    <Transition\n                      appear\n                      timeout={{ enter: 3000, exit: 2000 }}\n                      key={item}\n                      onEnter={reflow}\n                    >\n                      {wordStatus => (\n                        <span\n                          aria-hidden\n                          className={classNames(\n                            'intro__title-word',\n                            'intro__title-word--plus',\n                            `intro__title-word--${wordStatus}`\n                          )}\n                          style={{ '--delay': tokens.base.durationL }}\n                        >\n                          {item}\n                        </span>\n                      )}\n                    </Transition>\n                  ))}\n                </TransitionGroup>\n              </Heading>\n            </header>\n            {windowSize.width > media.tablet && (\n              <div\n                className={classNames(\n                  'intro__scroll-indicator',\n                  `intro__scroll-indicator--${status}`,\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n                status={status}\n              />\n            )}\n            {windowSize.width <= media.tablet && (\n              <div\n                className={classNames(\n                  'intro__mobile-scroll-indicator',\n                  `intro__mobile-scroll-indicator--${status}`,\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n              >\n                <Icon icon=\"arrowDown\" aria-hidden />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Transition>\n    </Section>\n  );\n}\n\nexport default Intro;\n","import './index.css';\n\nimport Seen1 from 'assets/seen1.jpg';\nimport Seen2 from 'assets/seen2.jpg';\nimport ThinkMoreForum from 'assets/ThinkMoreForum.png';\nimport MyGuard1 from 'assets/myguard1.jpg';\nimport MyGuard2 from 'assets/myguard2.jpg';\nimport Scientific_Articles_Retrieval_Tool from 'assets/Scientific-Articles-Retrieval-Tool.png';\nimport phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\nimport Footer from 'components/Footer';\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\n\nimport Profile from 'combination/Profile';\nimport ProjectSummary from 'combination/ProjectSummary';\nimport Intro from 'combination/Intro';\n\nimport { disciplines } from 'app/config';\n\nconst Home = () => {\n  const { status } = useRouteTransition();\n  const { hash, state } = useLocation();\n  const initHash = useRef(true);\n  const [visibleSections, setVisibleSections] = useState([]);\n  const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false);\n  const intro = useRef();\n  const projectOne = useRef();\n  const projectTwo = useRef();\n  const projectThree = useRef();\n  const projectFour = useRef();\n  const about = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const revealSections = [\n      intro,\n      projectOne,\n      projectTwo,\n      projectThree,\n      projectFour,\n      about,\n    ];\n\n    const sectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const section = entry.target;\n            observer.unobserve(section);\n            if (visibleSections.includes(section)) return;\n            setVisibleSections(prevSections => [...prevSections, section]);\n          }\n        });\n      },\n      { rootMargin: '0px 0px -10% 0px' }\n    );\n\n    const indicatorObserver = new IntersectionObserver(\n      ([entry]) => {\n        setScrollIndicatorHidden(!entry.isIntersecting);\n      },\n      { rootMargin: '-100% 0px 0px 0px' }\n    );\n\n    revealSections.forEach(section => {\n      sectionObserver.observe(section.current);\n    });\n\n    indicatorObserver.observe(intro.current);\n\n    return () => {\n      sectionObserver.disconnect();\n      indicatorObserver.disconnect();\n    };\n  }, [visibleSections]);\n\n  useEffect(() => {\n    const hasEntered = status === 'entered';\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\n    let scrollObserver;\n    let scrollTimeout;\n\n    const handleHashchange = (hash, scroll) => {\n      clearTimeout(scrollTimeout);\n      const hashSections = [intro, projectOne, about];\n      const hashString = hash.replace('#', '');\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\n      if (!element) return;\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\n      const top = element.current.offsetTop;\n\n      scrollObserver = new IntersectionObserver(\n        (entries, observer) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            scrollTimeout = setTimeout(\n              () => {\n                element.current.focus();\n              },\n              prefersReducedMotion ? 0 : 400\n            );\n            observer.unobserve(entry.target);\n          }\n        },\n        { rootMargin: '-20% 0px -20% 0px' }\n      );\n\n      scrollObserver.observe(element.current);\n\n      if (supportsNativeSmoothScroll) {\n        window.scroll({\n          top,\n          left: 0,\n          behavior,\n        });\n      } else {\n        window.scrollTo(0, top);\n      }\n    };\n\n    if (hash && initHash.current && hasEntered) {\n      handleHashchange(hash, false);\n      initHash.current = false;\n    } else if (!hash && initHash.current && hasEntered) {\n      window.scrollTo(0, 0);\n      initHash.current = false;\n    } else if (hasEntered) {\n      handleHashchange(hash, true);\n    }\n\n    return () => {\n      clearTimeout(scrollTimeout);\n      if (scrollObserver) {\n        scrollObserver.disconnect();\n      }\n    };\n  }, [hash, state, prefersReducedMotion, status]);\n\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>Qiming Liu | Full Stack Developer</title>\n        <link rel=\"prefetch\" href={phone} as=\"fetch\" />\n        <link rel=\"prefetch\" href={laptop} as=\"fetch\" />\n      </Helmet>\n      <Intro\n        id=\"intro\"\n        sectionRef={intro}\n        disciplines={disciplines}\n        scrollIndicatorHidden={scrollIndicatorHidden}\n      />\n      <ProjectSummary\n        id=\"project\"\n        alternate\n        sectionRef={projectOne}\n        visible={visibleSections.includes(projectOne.current)}\n        index={1}\n        title=\"Android Native App - Seen\"\n        description=\"An easy forum Android app include instant messaging.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          textures: [\n            {\n              src: Seen1,\n              srcSet: `${Seen1} 254w, ${Seen1} 508w`,\n              placeholder: Seen1,\n            },\n            {\n              src: Seen2,\n              srcSet: `${Seen2} 254w, ${Seen2} 508w`,\n              placeholder: Seen2,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project2\"\n        sectionRef={projectTwo}\n        visible={visibleSections.includes(projectTwo.current)}\n        index={2}\n        title=\"ThinkMore Forum\"\n        description=\"A responsive community platform build with Next.js and Spring Boot\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/ThinkMoreForum-Frontend\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: ThinkMoreForum,\n              srcSet: `${ThinkMoreForum} 980w, ${ThinkMoreForum} 1376w`,\n              placeholder: ThinkMoreForum,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project3\"\n        alternate\n        sectionRef={projectThree}\n        visible={visibleSections.includes(projectThree.current)}\n        index={3}\n        title=\"MyGuard\"\n        description=\"An Indoor Surveillance System using Raspberry Pi, Android and Sensors\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/MyGuard\"\n        model={{\n          type: 'phone',\n          alt: 'App login screen',\n          textures: [\n            {\n              src: MyGuard2,\n              srcSet: `${MyGuard2} 254w, ${MyGuard2} 508w`,\n              placeholder: MyGuard2,\n            },\n            {\n              src: MyGuard1,\n              srcSet: `${MyGuard1} 254w, ${MyGuard1} 508w`,\n              placeholder: MyGuard1,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project4\"\n        sectionRef={projectFour}\n        visible={visibleSections.includes(projectFour.current)}\n        index={4}\n        title=\"Scientific Articles Retrieval Tool\"\n        description=\"My Master Project about Natural Language Processing showing relation nodes\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Scientific-Articles-Retrieval-Tool\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: Scientific_Articles_Retrieval_Tool,\n              srcSet: `${Scientific_Articles_Retrieval_Tool} 980w, ${Scientific_Articles_Retrieval_Tool} 1376w`,\n              placeholder: Scientific_Articles_Retrieval_Tool,\n            },\n          ],\n        }}\n      />\n      <Profile\n        id=\"about\"\n        sectionRef={about}\n        visible={visibleSections.includes(about.current)}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["CharType","DecoderText","_ref","text","start","delay","startDelay","className","rest","output","useRef","type","value","container","reduceMotion","usePrefersReducedMotion","useEffect","containerInstance","current","content","split","animation","renderOutput","characterMap","map","item","innerHTML","join","springValue","position","index","rand","Math","floor","random","glyphList","length","shuffle","prerender","chain","spring","from","to","stiffness","damping","stop","_jsxs","classNames","children","_jsx","VisuallyHidden","ref","memo","Footer","Date","getFullYear","level","as","align","weight","clampedLevel","min","max","Component","Fragment","Helmet","rel","href","GothamBold","crossorigin","ImageElements","_ref2","onLoad","loaded","inViewport","srcSet","placeholder","src","alt","play","reveal","prefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","purgePlaceholder","placeholderElement","addEventListener","removeEventListener","async","resolvedVideoSrc","resolveVideoSrcFromSrcSet","resolveVideoSrc","width","height","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","onMouseOver","handleShowPlayButton","undefined","onMouseOut","style","numToMs","muted","loop","playsInline","autoPlay","role","onLoadStart","Transition","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","base","durationS","status","visible","Button","onFocus","onBlur","onClick","Icon","icon","decoding","target","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","forwardRef","size","secondary","ProfileText","titleId","Heading","id","Text","sectionRef","Section","tabIndex","onEnter","Image","ProfileImg","sizes","media","mobile","ModelAnimationType","phone","url","x","y","z","laptop","MeshType","models","show","showDelay","cameraPosition","enableControls","modelData","setModelData","canvas","camera","textureLoader","modelLoader","modelGroup","scene","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","threshold","clientWidth","clientHeight","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","opacity","transparent","Mesh","scale","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","onBeforeCompile","shader","uniforms","fragmentShader","replace","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","model","loadFullResTexture","gltf","Promise","all","loadAsync","traverse","convertSRGBToLinear","name","image","getImageFromSrcSet","fullSize","_ref3","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","_ref4","restSpeed","frameNode","find","startRotation","MathUtils","degToRad","endRotation","_ref5","getModelAnimation","removeLights","cleanScene","cleanRenderer","blurShadow","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","rotationSpring","rotationSpringValue","onMouseMove","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","_rotationSpring","handleResize","aspect","updateProjectionMatrix","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","defaultProps","title","description","buttonText","buttonLink","alternate","useWindowSize","isMobile","tablet","indexText","phoneSizes","laptopSizes","renderDetails","iconHoverShift","iconEnd","renderPreview","Model","isVisible","deviceModels","textures","DisplacementSphere","lazy","disciplines","scrollIndicatorHidden","theme","disciplineIndex","setDisciplineIndex","windowSize","prevTheme","usePrevious","introLabel","slice","currentDisciplines","filter","useInterval","appear","Suspense","fallback","durationXS","TransitionGroup","component","wordStatus","durationL","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","projectTwo","projectThree","projectFour","about","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","unobserve","includes","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","document","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Intro","ProjectSummary","Seen1","Seen2","ThinkMoreForum","MyGuard2","MyGuard1","Scientific_Articles_Retrieval_Tool","Profile","resolve","reject","Error","tempImage","srcset","source","currentSrc","error","sources","srcString","arguments","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","fakeSrcSet","fakeSrc","navigator","userAgent","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","key","Object","keys","forceContextLoss","parent"],"sourceRoot":""}