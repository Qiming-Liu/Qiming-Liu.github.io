{"version":3,"sources":["assets/seen1.jpg","assets/seen2.jpg","assets/ThinkMoreForum.png","assets/myguard1.jpg","assets/myguard2.jpg","assets/websubtitleplayer.png","assets/phone.glb","assets/laptop.glb","assets/profile.jpg","combination/Profile/index.js","components/Model/deviceModels.js","components/Model/index.js","components/Divider/index.js","combination/ProjectSummary/index.js","combination/Intro/index.js","pages/Home/index.js","utils/prerender.js","assets/fonts/gotham-bold.woff2","components/Heading/index.js","components/Text/index.js","components/Footer/index.js","components/Section/index.js","components/DecoderText/index.js","utils/image.js","utils/three.js","components/Image/index.js"],"names":["ProfileText","status","titleId","Heading","className","classNames","level","id","DecoderText","text","start","delay","Text","size","Profile","visible","sectionRef","Section","as","ref","aria-labelledby","tabIndex","Transition","in","timeout","onEnter","reflow","Image","reveal","srcSet","ProfileImg","sizes","media","mobile","ModelAnimationType","models","phone","url","width","height","position","x","y","z","animation","laptop","MeshType","Model","show","showDelay","cameraPosition","enableControls","style","alt","rest","modelData","setModelData","useState","loaded","setLoaded","container","useRef","canvas","camera","textureLoader","modelLoader","modelGroup","scene","renderer","shadowGroup","renderTarget","renderTargetBlur","shadowCamera","depthMaterial","horizontalBlurMaterial","verticalBlurMaterial","plane","lights","blurPlane","fillPlane","isInViewport","useInViewport","threshold","reduceMotion","usePrefersReducedMotion","useEffect","clientWidth","clientHeight","current","WebGLRenderer","alpha","antialias","powerPreference","setPixelRatio","setSize","outputEncoding","sRGBEncoding","physicallyCorrectLights","PerspectiveCamera","set","Scene","TextureLoader","GLTFLoader","Group","ambientLight","AmbientLight","keyLight","DirectionalLight","fillLight","forEach","light","add","rotateX","Math","PI","renderTargetSize","WebGLRenderTarget","texture","generateMipmaps","planeGeometry","PlaneBufferGeometry","planeMaterial","MeshBasicMaterial","map","opacity","transparent","Mesh","scale","fillMaterial","color","OrthographicCamera","planeWidth","planeHeight","rotation","MeshDepthMaterial","userData","darkness","value","onBeforeCompile","shader","uniforms","fragmentShader","replace","depthTest","depthWrite","ShaderMaterial","HorizontalBlurShader","VerticalBlurShader","applyScreenTexture","async","node","encoding","minFilter","LinearFilter","magFilter","flipY","anisotropy","capabilities","getMaxAnisotropy","initTexture","material","Color","modelConfigPromises","model","index","loadFullResTexture","gltf","placeholder","Promise","all","loadAsync","traverse","convertSRGBToLinear","name","image","getImageFromSrcSet","fullSize","renderFrame","positionVector","Vector3","toArray","startPosition","endPosition","modelValue","chain","spring","from","to","stiffness","damping","restSpeed","frameNode","children","find","startRotation","MathUtils","degToRad","endRotation","getModelAnimation","removeLights","cleanScene","cleanRenderer","blurShadow","useCallback","amount","tDiffuse","h","setRenderTarget","render","v","initialBackground","background","overrideMaterial","blurAmount","introSprings","loadedModels","handleModelLoad","modelAnimation","push","loadScene","stop","rotationSpring","rotationSpringValue","onMouseMove","event","innerWidth","innerHeight","window","clientX","clientY","get","velocity","getVelocity","mass","addEventListener","removeEventListener","handleResize","aspect","updateProjectionMatrix","numToMs","role","aria-label","Divider","lineWidth","lineHeight","notchWidth","notchHeight","collapseDelay","collapsed","defaultProps","ProjectSummary","title","description","buttonText","buttonLink","alternate","useWindowSize","isMobile","tablet","indexText","phoneSizes","laptopSizes","renderDetails","aria-hidden","Button","iconHoverShift","href","iconEnd","renderPreview","type","isVisible","deviceModels","textures","DisplacementSphere","lazy","Intro","disciplines","scrollIndicatorHidden","theme","useTheme","disciplineIndex","setDisciplineIndex","windowSize","prevTheme","usePrevious","introLabel","slice","join","currentDisciplines","filter","item","useInterval","length","themeId","appear","prerender","fallback","VisuallyHidden","tokens","base","durationXS","TransitionGroup","component","enter","exit","wordStatus","durationL","Icon","icon","Home","useRouteTransition","hash","state","useLocation","initHash","visibleSections","setVisibleSections","setScrollIndicatorHidden","intro","projectOne","projectTwo","projectThree","projectFour","about","prefersReducedMotion","revealSections","sectionObserver","IntersectionObserver","entries","observer","entry","isIntersecting","section","target","unobserve","includes","prevSections","rootMargin","indicatorObserver","observe","disconnect","hasEntered","supportsNativeSmoothScroll","document","documentElement","scrollObserver","scrollTimeout","handleHashchange","scroll","clearTimeout","hashSections","hashString","element","behavior","top","offsetTop","setTimeout","focus","left","scrollTo","Helmet","rel","src","Seen1","Seen2","ThinkMoreForum","MyGuard2","MyGuard1","WebSubtitlePlayer","Footer","navigator","userAgent","align","weight","clampedLevel","min","max","Component","GothamBold","crossorigin","secondary","Date","getFullYear","forwardRef","CharType","startDelay","output","containerInstance","content","split","renderOutput","characterMap","innerHTML","springValue","rand","floor","random","glyphList","shuffle","memo","resolve","reject","Error","tempImage","srcset","onLoad","source","currentSrc","error","resolveVideoSrcFromSrcSet","sources","srcString","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","fakeSrcSet","fakeSrc","object","isMesh","geometry","dispose","isMaterial","cleanMaterial","key","Object","keys","forceContextLoss","parent","ImageElements","inViewport","play","showPlaceholder","setShowPlaceholder","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","videoRef","isVideo","endsWith","imgSrc","showFullRes","purgePlaceholder","placeholderElement","resolvedVideoSrc","resolveVideoSrc","pause","togglePlaying","preventDefault","paused","handleFocusPlayButton","onMouseOver","undefined","onMouseOut","muted","loop","playsInline","autoPlay","onLoadStart","onExit","onExited","msToNum","durationS","onFocus","onBlur","onClick","decoding","raised","containerRef"],"mappings":"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","file":"static/js/2.e34db851.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/seen1.69eded44.jpg\";","export default __webpack_public_path__ + \"static/media/seen2.eea3ff72.jpg\";","export default __webpack_public_path__ + \"static/media/ThinkMoreForum.bc173ffd.png\";","export default __webpack_public_path__ + \"static/media/myguard1.53e46c74.jpg\";","export default __webpack_public_path__ + \"static/media/myguard2.357a7635.jpg\";","export default __webpack_public_path__ + \"static/media/websubtitleplayer.ed9c9351.png\";","export default __webpack_public_path__ + \"static/media/phone.dfa3acae.glb\";","export default __webpack_public_path__ + \"static/media/laptop.29527f3f.glb\";","export default __webpack_public_path__ + \"static/media/profile.6b23b272.jpg\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport Image from 'components/Image';\nimport Section from 'components/Section';\nimport ProfileImg from 'assets/profile.jpg';\nimport { reflow } from 'utils/transition';\nimport { media } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProfileText = ({ status, titleId }) => (\n  <Fragment>\n    <Heading\n      className={classNames('profile__title', `profile__title--${status}`)}\n      level={3}\n      id={titleId}\n    >\n      <DecoderText text=\"Hi there\" start={status !== 'exited'} delay={500} />\n    </Heading>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      My name is Qiming and I am studying at the University of Adelaide.\n    </Text>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      I'm a Full-stack developer with 7+ years of experience in programming. Develop\n      fantastic features using React hooks with over 100+ stars on Github.\n    </Text>\n    <Text\n      className={classNames('profile__description', `profile__description--${status}`)}\n      size=\"l\"\n    >\n      Implemented Front-end and Back-end CD/CI Pipeline, containerize and monitor web\n      application with Docker.\n    </Text>\n  </Fragment>\n);\n\nconst Profile = ({ id, visible, sectionRef }) => {\n  const titleId = `${id}-title`;\n\n  return (\n    <Section\n      className=\"profile\"\n      as=\"section\"\n      id={id}\n      ref={sectionRef}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n    >\n      <Transition in={visible} timeout={0} onEnter={reflow}>\n        {status => (\n          <div className=\"profile__content\">\n            <div className=\"profile__column\">\n              <ProfileText status={status} titleId={titleId} />\n            </div>\n            <div className=\"profile__column\">\n              <div className=\"profile__image-wrapper\">\n                <Image\n                  reveal\n                  delay={100}\n                  srcSet={`${ProfileImg} 480w, ${ProfileImg} 960w`}\n                  sizes={`(max-width: ${media.mobile}px) 100vw, 480px`}\n                />\n              </div>\n            </div>\n          </div>\n        )}\n      </Transition>\n    </Section>\n  );\n};\n\nexport default Profile;\n","import phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\n\nexport const ModelAnimationType = {\n  SpringUp: 'spring-up',\n  LaptopOpen: 'laptop-open',\n};\n\nconst models = {\n  phone: {\n    url: phone,\n    width: 374,\n    height: 512,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.SpringUp,\n  },\n  laptop: {\n    url: laptop,\n    width: 1280,\n    height: 800,\n    position: { x: 0, y: 0, z: 0 },\n    animation: ModelAnimationType.LaptopOpen,\n  },\n};\n\nexport default models;\n","import { useEffect, useCallback, useRef, useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  sRGBEncoding,\n  LinearFilter,\n  Color,\n  TextureLoader,\n  Vector3,\n  MathUtils,\n  Group,\n  AmbientLight,\n  DirectionalLight,\n  WebGLRenderer,\n  PerspectiveCamera,\n  Scene,\n  WebGLRenderTarget,\n  PlaneBufferGeometry,\n  MeshBasicMaterial,\n  Mesh,\n  OrthographicCamera,\n  MeshDepthMaterial,\n  ShaderMaterial,\n} from 'three';\nimport { HorizontalBlurShader } from 'three/examples/jsm/shaders/HorizontalBlurShader.js';\nimport { VerticalBlurShader } from 'three/examples/jsm/shaders/VerticalBlurShader.js';\nimport { GLTFLoader } from 'three/examples/jsm/loaders/GLTFLoader.js';\nimport { delay, chain, spring, value } from 'popmotion';\nimport { getImageFromSrcSet } from 'utils/image';\nimport { useInViewport, usePrefersReducedMotion } from 'hooks';\nimport { cleanScene, cleanRenderer, removeLights } from 'utils/three';\nimport { ModelAnimationType } from './deviceModels';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst MeshType = {\n  Frame: 'Frame',\n  Logo: 'Logo',\n  Screen: 'Screen',\n};\n\nconst Model = ({\n  models,\n  show = true,\n  showDelay = 0,\n  cameraPosition = { x: 0, y: 0, z: 8 },\n  enableControls,\n  style,\n  className,\n  alt,\n  ...rest\n}) => {\n  const [modelData, setModelData] = useState();\n  const [loaded, setLoaded] = useState(false);\n  const container = useRef();\n  const canvas = useRef();\n  const camera = useRef();\n  const textureLoader = useRef();\n  const modelLoader = useRef();\n  const modelGroup = useRef();\n  const scene = useRef();\n  const renderer = useRef();\n  const shadowGroup = useRef();\n  const renderTarget = useRef();\n  const renderTargetBlur = useRef();\n  const shadowCamera = useRef();\n  const depthMaterial = useRef();\n  const horizontalBlurMaterial = useRef();\n  const verticalBlurMaterial = useRef();\n  const plane = useRef();\n  const lights = useRef();\n  const blurPlane = useRef();\n  const fillPlane = useRef();\n  const isInViewport = useInViewport(container, false, { threshold: 0.4 });\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const { clientWidth, clientHeight } = container.current;\n\n    renderer.current = new WebGLRenderer({\n      canvas: canvas.current,\n      alpha: true,\n      antialias: false,\n      powerPreference: 'high-performance',\n    });\n\n    renderer.current.setPixelRatio(2);\n    renderer.current.setSize(clientWidth, clientHeight);\n    renderer.current.outputEncoding = sRGBEncoding;\n    renderer.current.physicallyCorrectLights = true;\n\n    camera.current = new PerspectiveCamera(36, clientWidth / clientHeight, 0.1, 100);\n    camera.current.position.set(cameraPosition.x, cameraPosition.y, cameraPosition.z);\n    scene.current = new Scene();\n\n    textureLoader.current = new TextureLoader();\n    modelLoader.current = new GLTFLoader();\n    modelGroup.current = new Group();\n\n    // Lighting\n    const ambientLight = new AmbientLight(0xffffff, 1.2);\n    const keyLight = new DirectionalLight(0xffffff, 1.1);\n    const fillLight = new DirectionalLight(0xffffff, 0.8);\n\n    fillLight.position.set(-6, 2, 2);\n    keyLight.position.set(0.5, 0, 0.866);\n    lights.current = [ambientLight, keyLight, fillLight];\n    lights.current.forEach(light => scene.current.add(light));\n\n    // The shadow container, if you need to move the plane just move this\n    shadowGroup.current = new Group();\n    scene.current.add(shadowGroup.current);\n    shadowGroup.current.position.set(0, 0, -0.8);\n    shadowGroup.current.rotateX(Math.PI / 2);\n\n    const renderTargetSize = 512;\n    const planeWidth = 8;\n    const planeHeight = 8;\n    const cameraHeight = 1.5;\n    const shadowOpacity = 0.8;\n    const shadowDarkness = 3;\n\n    // The render target that will show the shadows in the plane texture\n    renderTarget.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTarget.current.texture.generateMipmaps = false;\n\n    // The render target that we will use to blur the first render target\n    renderTargetBlur.current = new WebGLRenderTarget(renderTargetSize, renderTargetSize);\n    renderTargetBlur.current.texture.generateMipmaps = false;\n\n    // Make a plane and make it face up\n    const planeGeometry = new PlaneBufferGeometry(planeWidth, planeHeight).rotateX(\n      Math.PI / 2\n    );\n\n    const planeMaterial = new MeshBasicMaterial({\n      map: renderTarget.current.texture,\n      opacity: shadowOpacity,\n      transparent: true,\n    });\n\n    plane.current = new Mesh(planeGeometry, planeMaterial);\n    // The y from the texture is flipped!\n    plane.current.scale.y = -1;\n    shadowGroup.current.add(plane.current);\n\n    // The plane onto which to blur the texture\n    blurPlane.current = new Mesh(planeGeometry);\n    blurPlane.current.visible = false;\n    shadowGroup.current.add(blurPlane.current);\n\n    // The plane with the color of the ground\n    const fillMaterial = new MeshBasicMaterial({\n      color: 0xffffff,\n      opacity: 0,\n      transparent: true,\n    });\n\n    fillPlane.current = new Mesh(planeGeometry, fillMaterial);\n    fillPlane.current.rotateX(Math.PI);\n    fillPlane.current.position.y -= 0.00001;\n    shadowGroup.current.add(fillPlane.current);\n\n    // The camera to render the depth material from\n    shadowCamera.current = new OrthographicCamera(\n      -planeWidth / 2,\n      planeWidth / 2,\n      planeHeight / 2,\n      -planeHeight / 2,\n      0,\n      cameraHeight\n    );\n    // Get the camera to look up\n    shadowCamera.current.rotation.x = Math.PI / 2;\n    shadowGroup.current.add(shadowCamera.current);\n\n    // Like MeshDepthMaterial, but goes from black to transparent\n    depthMaterial.current = new MeshDepthMaterial();\n    depthMaterial.current.userData.darkness = { value: shadowDarkness };\n    depthMaterial.current.onBeforeCompile = shader => {\n      shader.uniforms.darkness = depthMaterial.current.userData.darkness;\n      shader.fragmentShader = `\n        uniform float darkness;\n        ${shader.fragmentShader.replace(\n          'gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );',\n          'gl_FragColor = vec4( vec3( 0.0 ), ( 1.0 - fragCoordZ ) * darkness );'\n        )}\n      `;\n    };\n    depthMaterial.current.depthTest = false;\n    depthMaterial.current.depthWrite = false;\n\n    horizontalBlurMaterial.current = new ShaderMaterial(HorizontalBlurShader);\n    horizontalBlurMaterial.current.depthTest = false;\n\n    verticalBlurMaterial.current = new ShaderMaterial(VerticalBlurShader);\n    verticalBlurMaterial.current.depthTest = false;\n\n    const applyScreenTexture = async (texture, node) => {\n      texture.encoding = sRGBEncoding;\n      texture.minFilter = LinearFilter;\n      texture.magFilter = LinearFilter;\n      texture.flipY = false;\n      texture.anisotropy = renderer.current.capabilities.getMaxAnisotropy();\n      texture.generateMipmaps = false;\n\n      // Decode the texture to prevent jank on first render\n      await renderer.current.initTexture(texture);\n\n      node.material.color = new Color(0xffffff);\n      node.material.transparent = false;\n      node.material.map = texture;\n    };\n\n    // Build an array of promises to fetch and apply models & animations\n    const modelConfigPromises = models.map(async (model, index) => {\n      const { texture, position, url } = model;\n      let loadFullResTexture;\n\n      const [gltf, placeholder] = await Promise.all([\n        await modelLoader.current.loadAsync(url),\n        await textureLoader.current.loadAsync(texture.placeholder),\n      ]);\n\n      gltf.scene.traverse(async node => {\n        if (node.material) {\n          node.material.color = new Color(0x1f2025);\n          node.material.color.convertSRGBToLinear();\n        }\n\n        if (node.name === MeshType.Screen) {\n          applyScreenTexture(placeholder, node);\n          loadFullResTexture = async () => {\n            const image = await getImageFromSrcSet(texture);\n            const fullSize = await textureLoader.current.loadAsync(image);\n            await applyScreenTexture(fullSize, node);\n          };\n        }\n      });\n\n      modelGroup.current.add(gltf.scene);\n\n      const animation = getModelAnimation({\n        model,\n        gltf,\n        position,\n        reduceMotion,\n        renderFrame,\n        index,\n        showDelay,\n      });\n\n      return { ...animation, loadFullResTexture };\n    });\n\n    setModelData(modelConfigPromises);\n\n    return () => {\n      removeLights(lights.current);\n      cleanScene(scene.current);\n      cleanRenderer(renderer.current);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const blurShadow = useCallback(amount => {\n    blurPlane.current.visible = true;\n\n    // Blur horizontally and draw in the renderTargetBlur\n    blurPlane.current.material = horizontalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTarget.current.texture;\n    horizontalBlurMaterial.current.uniforms.h.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTargetBlur.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    // Blur vertically and draw in the main renderTarget\n    blurPlane.current.material = verticalBlurMaterial.current;\n    blurPlane.current.material.uniforms.tDiffuse.value = renderTargetBlur.current.texture;\n    verticalBlurMaterial.current.uniforms.v.value = amount * (1 / 256);\n\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(blurPlane.current, shadowCamera.current);\n\n    blurPlane.current.visible = false;\n  }, []);\n\n  // Handle render passes for a single frame\n  const renderFrame = useCallback(() => {\n    const blurAmount = 5;\n\n    // Remove the background\n    const initialBackground = scene.current.background;\n    scene.current.background = null;\n\n    // Force the depthMaterial to everything\n    // cameraHelper.visible = false;\n    scene.current.overrideMaterial = depthMaterial.current;\n\n    // Render to the render target to get the depths\n    renderer.current.setRenderTarget(renderTarget.current);\n    renderer.current.render(scene.current, shadowCamera.current);\n\n    // And reset the override material\n    scene.current.overrideMaterial = null;\n\n    blurShadow(blurAmount);\n\n    // A second pass to reduce the artifacts\n    // (0.4 is the minimum blur amout so that the artifacts are gone)\n    blurShadow(blurAmount * 0.4);\n\n    // Reset and render the normal scene\n    renderer.current.setRenderTarget(null);\n    scene.current.background = initialBackground;\n\n    renderer.current.render(scene.current, camera.current);\n  }, [blurShadow]);\n\n  useEffect(() => {\n    let introSprings = [];\n\n    if (!modelData) return;\n\n    scene.current.add(modelGroup.current);\n\n    const loadScene = async () => {\n      const loadedModels = await Promise.all(modelData);\n\n      setLoaded(true);\n\n      const handleModelLoad = loadedModels.map(async model => {\n        // Start animation\n        if (model.animation) {\n          const modelAnimation = model.animation.start(model.modelValue);\n          introSprings.push(modelAnimation);\n        }\n\n        if (reduceMotion) {\n          renderFrame();\n        }\n\n        // Load full res screen texture\n        await model.loadFullResTexture();\n\n        // Render the loaded texture\n        if (reduceMotion) {\n          renderFrame();\n        }\n      });\n\n      await Promise.all(handleModelLoad);\n    };\n\n    if (show) {\n      loadScene();\n    }\n\n    return () => {\n      for (const spring of introSprings) {\n        spring.stop();\n      }\n    };\n  }, [modelData, reduceMotion, renderFrame, show]);\n\n  // Handle mouse move animation\n  useEffect(() => {\n    let rotationSpring;\n    let rotationSpringValue;\n\n    const onMouseMove = event => {\n      const { rotation } = modelGroup.current;\n      const { innerWidth, innerHeight } = window;\n\n      const position = {\n        x: (event.clientX - innerWidth / 2) / innerWidth,\n        y: (event.clientY - innerHeight / 2) / innerHeight,\n      };\n\n      if (!rotationSpringValue) {\n        rotationSpringValue = value({ x: rotation.x, y: rotation.y }, ({ x, y }) => {\n          rotation.set(x, y, rotation.z);\n          renderFrame();\n        });\n      }\n\n      rotationSpring = spring({\n        from: rotationSpringValue.get(),\n        to: { x: position.y / 2, y: position.x / 2 },\n        stiffness: 40,\n        damping: 40,\n        velocity: rotationSpringValue.getVelocity(),\n        restSpeed: 0.00001,\n        mass: 1.4,\n      }).start(rotationSpringValue);\n    };\n\n    if (isInViewport && !reduceMotion) {\n      window.addEventListener('mousemove', onMouseMove);\n    }\n\n    return () => {\n      window.removeEventListener('mousemove', onMouseMove);\n      rotationSpring?.stop();\n    };\n  }, [isInViewport, reduceMotion, renderFrame]);\n\n  // Handle window resize\n  useEffect(() => {\n    const handleResize = () => {\n      if (!container.current) return;\n\n      const { clientWidth, clientHeight } = container.current;\n\n      renderer.current.setSize(clientWidth, clientHeight);\n      camera.current.aspect = clientWidth / clientHeight;\n      camera.current.updateProjectionMatrix();\n\n      renderFrame();\n    };\n\n    window.addEventListener('resize', handleResize);\n    handleResize();\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [renderFrame]);\n\n  return (\n    <div\n      className={classNames('model', { 'model--loaded': loaded }, className)}\n      style={{ '--delay': numToMs(showDelay), ...style }}\n      ref={container}\n      role=\"img\"\n      aria-label={alt}\n      {...rest}\n    >\n      <canvas className=\"model__canvas\" ref={canvas} />\n    </div>\n  );\n};\n\n// Get custom model animation\nfunction getModelAnimation({ model, gltf, reduceMotion, renderFrame, index, showDelay }) {\n  const positionVector = new Vector3(\n    model.position.x,\n    model.position.y,\n    model.position.z\n  );\n\n  if (reduceMotion) {\n    gltf.scene.position.set(...positionVector.toArray());\n    return;\n  }\n\n  // Simple slide up animation\n  if (model.animation === ModelAnimationType.SpringUp) {\n    const startPosition = new Vector3(\n      positionVector.x,\n      positionVector.y - 1,\n      positionVector.z\n    );\n    const endPosition = positionVector;\n\n    gltf.scene.position.set(...startPosition.toArray());\n\n    const modelValue = value(gltf.scene.position, ({ x, y, z }) => {\n      gltf.scene.position.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay * 0.6),\n      spring({\n        from: startPosition,\n        to: endPosition,\n        stiffness: 60,\n        damping: 16,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n\n  // Laptop open animation\n  if (model.animation === ModelAnimationType.LaptopOpen) {\n    const frameNode = gltf.scene.children.find(node => node.name === MeshType.Frame);\n    const startRotation = new Vector3(MathUtils.degToRad(90), 0, 0);\n    const endRotation = new Vector3(0, 0, 0);\n\n    gltf.scene.position.set(...positionVector.toArray());\n    frameNode.rotation.set(...startRotation.toArray());\n\n    const modelValue = value(frameNode.rotation, ({ x, y, z }) => {\n      frameNode.rotation.set(x, y, z);\n      renderFrame();\n    });\n\n    const animation = chain(\n      delay(300 * index + showDelay + 200),\n      spring({\n        from: startRotation,\n        to: endRotation,\n        stiffness: 50,\n        damping: 14,\n        restSpeed: 0.001,\n      })\n    );\n\n    return { animation, modelValue };\n  }\n}\n\nexport default Model;\n","import classNames from 'classnames';\nimport { numToMs } from 'utils/style';\nimport './index.css';\n\nconst Divider = ({\n  lineWidth,\n  lineHeight,\n  notchWidth,\n  notchHeight,\n  collapseDelay,\n  collapsed,\n  className,\n  style,\n}) => (\n  <div\n    className={classNames('divider', className)}\n    style={{\n      '--lineWidth': lineWidth,\n      '--lineHeight': lineHeight,\n      '--notchWidth': notchWidth,\n      '--notchHeight': notchHeight,\n      '--collapseDelay': numToMs(collapseDelay),\n      ...style,\n    }}\n  >\n    <div\n      className={classNames('divider__line', { 'divider__line--collapsed': collapsed })}\n    />\n    <div\n      className={classNames('divider__notch', { 'divider__notch--collapsed': collapsed })}\n      style={{ '--collapseDelay': numToMs(collapseDelay + 160) }}\n    />\n  </div>\n);\n\nDivider.defaultProps = {\n  lineWidth: '100%',\n  lineHeight: '2px',\n  notchWidth: '90px',\n  notchHeight: '10px',\n  collapsed: false,\n  collapseDelay: 0,\n};\n\nexport default Divider;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Transition } from 'react-transition-group';\nimport Section from 'components/Section';\nimport { Button } from 'components/Button';\nimport Model from 'components/Model';\nimport Divider from 'components/Divider';\nimport { useWindowSize } from 'hooks';\nimport { reflow, isVisible } from 'utils/transition';\nimport { media } from 'utils/style';\nimport deviceModels from 'components/Model/deviceModels';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst ProjectSummary = ({\n  id,\n  visible,\n  sectionRef,\n  index,\n  title,\n  description,\n  model,\n  buttonText,\n  buttonLink,\n  alternate,\n  ...rest\n}) => {\n  const { width } = useWindowSize();\n  const titleId = `${id}-title`;\n  const isMobile = width <= media.tablet;\n  const indexText = index < 10 ? `0${index}` : index;\n  const phoneSizes = `(max-width: ${media.tablet}px) 30vw, 20vw`;\n  const laptopSizes = `(max-width: ${media.tablet}px) 80vw, 40vw`;\n\n  const renderDetails = status => (\n    <div className=\"project-summary__details\">\n      <div aria-hidden className=\"project-summary__index\">\n        <Divider\n          notchWidth=\"64px\"\n          notchHeight=\"8px\"\n          collapsed={status !== 'entered'}\n          collapseDelay={1000}\n        />\n        <span\n          className={classNames(\n            'project-summary__index-number',\n            `project-summary__index-number--${status}`\n          )}\n        >\n          {indexText}\n        </span>\n      </div>\n      <Heading\n        level={3}\n        as=\"h2\"\n        className={classNames(\n          'project-summary__title',\n          `project-summary__title--${status}`\n        )}\n        id={titleId}\n      >\n        {title}\n      </Heading>\n      <Text\n        className={classNames(\n          'project-summary__description',\n          `project-summary__description--${status}`\n        )}\n      >\n        {description}\n      </Text>\n      <div\n        className={classNames(\n          'project-summary__button',\n          `project-summary__button--${status}`\n        )}\n      >\n        <Button iconHoverShift href={buttonLink} iconEnd=\"arrowRight\">\n          {buttonText}\n        </Button>\n      </div>\n    </div>\n  );\n\n  const renderPreview = status => (\n    <div className=\"project-summary__preview\">\n      {model.type === 'laptop' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--laptop'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 8 }}\n            showDelay={800}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.laptop,\n                texture: {\n                  ...model.textures[0],\n                  sizes: laptopSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n      {model.type === 'phone' && (\n        <Fragment>\n          <Model\n            className={classNames(\n              'project-summary__model',\n              'project-summary__model--phone'\n            )}\n            alt={model.alt}\n            cameraPosition={{ x: 0, y: 0, z: 11.5 }}\n            showDelay={500}\n            show={isVisible(status)}\n            models={[\n              {\n                ...deviceModels.phone,\n                position: { x: -0.6, y: 1.1, z: 0 },\n                texture: {\n                  ...model.textures[0],\n                  sizes: phoneSizes,\n                },\n              },\n              {\n                ...deviceModels.phone,\n                position: { x: 0.6, y: -0.5, z: 0.3 },\n                texture: {\n                  ...model.textures[1],\n                  sizes: phoneSizes,\n                },\n              },\n            ]}\n          />\n        </Fragment>\n      )}\n    </div>\n  );\n\n  return (\n    <Section\n      className={classNames('project-summary', {\n        'project-summary--alternate': alternate,\n        'project-summary--first': index === '01',\n      })}\n      as=\"section\"\n      aria-labelledby={titleId}\n      ref={sectionRef}\n      id={id}\n      tabIndex={-1}\n      {...rest}\n    >\n      <div className=\"project-summary__content\">\n        <Transition in={visible} timeout={0} onEnter={reflow}>\n          {status => (\n            <Fragment>\n              {!alternate && !isMobile && (\n                <Fragment>\n                  {renderDetails(status)}\n                  {renderPreview(status)}\n                </Fragment>\n              )}\n              {(alternate || isMobile) && (\n                <Fragment>\n                  {renderPreview(status)}\n                  {renderDetails(status)}\n                </Fragment>\n              )}\n            </Fragment>\n          )}\n        </Transition>\n      </div>\n    </Section>\n  );\n};\n\nexport default ProjectSummary;\n","import { Suspense, lazy, useEffect, useState, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { TransitionGroup, Transition } from 'react-transition-group';\nimport DecoderText from 'components/DecoderText';\nimport { useInterval, usePrevious, useWindowSize } from 'hooks';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { media } from 'utils/style';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport Heading from 'components/Heading';\nimport Section from 'components/Section';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport Icon from 'components/Icon';\nimport './index.css';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n\nfunction Intro({ id, sectionRef, disciplines, scrollIndicatorHidden, ...rest }) {\n  const theme = useTheme();\n  const [disciplineIndex, setDisciplineIndex] = useState(0);\n  const windowSize = useWindowSize();\n  const prevTheme = usePrevious(theme);\n  const introLabel = [disciplines.slice(0, -1).join(', '), disciplines.slice(-1)[0]].join(\n    ', and '\n  );\n  const currentDisciplines = disciplines.filter(\n    (item, index) => index === disciplineIndex\n  );\n  const titleId = `${id}-title`;\n\n  useInterval(\n    () => {\n      const index = (disciplineIndex + 1) % disciplines.length;\n      setDisciplineIndex(index);\n    },\n    5000,\n    theme.themeId\n  );\n\n  useEffect(() => {\n    if (prevTheme && prevTheme.themeId !== theme.themeId) {\n      setDisciplineIndex(0);\n    }\n  }, [theme.themeId, prevTheme]);\n\n  return (\n    <Section\n      className=\"intro\"\n      as=\"section\"\n      ref={sectionRef}\n      id={id}\n      aria-labelledby={titleId}\n      tabIndex={-1}\n      {...rest}\n    >\n      <Transition\n        key={theme.themeId}\n        appear={!prerender}\n        in={!prerender}\n        timeout={3000}\n        onEnter={reflow}\n      >\n        {status => (\n          <Fragment>\n            {!prerender && (\n              <Suspense fallback={null}>\n                <DisplacementSphere />\n              </Suspense>\n            )}\n            <header className=\"intro__text\">\n              <h1\n                className={classNames('intro__name', `intro__name--${status}`)}\n                id={titleId}\n              >\n                <DecoderText text=\"Alan Qiming Liu\" start={!prerender} delay={300} />\n              </h1>\n              <Heading level={0} as=\"h2\" className=\"intro__title\">\n                <VisuallyHidden className=\"intro__title-label\">{`Web Developer + ${introLabel}`}</VisuallyHidden>\n                <span\n                  aria-hidden\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                >\n                  <span\n                    className={classNames(\n                      'intro__title-word',\n                      `intro__title-word--${status}`,\n                    )}\n                    style={{ '--delay': tokens.base.durationXS }}\n                  >\n                    Full Stack<br></br>\n                    Web Developer\n                  </span>\n                </span>\n                <TransitionGroup\n                  className={classNames('intro__title-row', {\n                    'intro__title-row--hidden': prerender,\n                  })}\n                  component=\"span\"\n                >\n                  {currentDisciplines.map(item => (\n                    <Transition\n                      appear\n                      timeout={{ enter: 3000, exit: 2000 }}\n                      key={item}\n                      onEnter={reflow}\n                    >\n                      {wordStatus => (\n                        <span\n                          aria-hidden\n                          className={classNames(\n                            'intro__title-word',\n                            'intro__title-word--plus',\n                            `intro__title-word--${wordStatus}`\n                          )}\n                          style={{ '--delay': tokens.base.durationL }}\n                        >\n                          {item}\n                        </span>\n                      )}\n                    </Transition>\n                  ))}\n                </TransitionGroup>\n              </Heading>\n            </header>\n            {windowSize.width > media.tablet && (\n              <div\n                className={classNames(\n                  'intro__scroll-indicator',\n                  `intro__scroll-indicator--${status}`,\n                  { 'intro__scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n                status={status}\n              />\n            )}\n            {windowSize.width <= media.tablet && (\n              <div\n                className={classNames(\n                  'intro__mobile-scroll-indicator',\n                  `intro__mobile-scroll-indicator--${status}`,\n                  { 'intro__mobile-scroll-indicator--hidden': scrollIndicatorHidden }\n                )}\n              >\n                <Icon icon=\"arrowDown\" aria-hidden />\n              </div>\n            )}\n          </Fragment>\n        )}\n      </Transition>\n    </Section>\n  );\n}\n\nexport default Intro;\n","import './index.css';\n\nimport Seen1 from 'assets/seen1.jpg';\nimport Seen2 from 'assets/seen2.jpg';\nimport ThinkMoreForum from 'assets/ThinkMoreForum.png';\nimport MyGuard1 from 'assets/myguard1.jpg';\nimport MyGuard2 from 'assets/myguard2.jpg';\nimport WebSubtitlePlayer from 'assets/websubtitleplayer.png';\nimport phone from 'assets/phone.glb';\nimport laptop from 'assets/laptop.glb';\nimport Footer from 'components/Footer';\nimport { usePrefersReducedMotion, useRouteTransition } from 'hooks';\nimport { useEffect, useRef, useState } from 'react';\nimport { Helmet } from 'react-helmet';\nimport { useLocation } from 'react-router-dom';\n\nimport Profile from 'combination/Profile';\nimport ProjectSummary from 'combination/ProjectSummary';\nimport Intro from 'combination/Intro';\n\nimport { disciplines } from 'app/config';\n\nconst Home = () => {\n  const { status } = useRouteTransition();\n  const { hash, state } = useLocation();\n  const initHash = useRef(true);\n  const [visibleSections, setVisibleSections] = useState([]);\n  const [scrollIndicatorHidden, setScrollIndicatorHidden] = useState(false);\n  const intro = useRef();\n  const projectOne = useRef();\n  const projectTwo = useRef();\n  const projectThree = useRef();\n  const projectFour = useRef();\n  const about = useRef();\n  const prefersReducedMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const revealSections = [\n      intro,\n      projectOne,\n      projectTwo,\n      projectThree,\n      projectFour,\n      about,\n    ];\n\n    const sectionObserver = new IntersectionObserver(\n      (entries, observer) => {\n        entries.forEach(entry => {\n          if (entry.isIntersecting) {\n            const section = entry.target;\n            observer.unobserve(section);\n            if (visibleSections.includes(section)) return;\n            setVisibleSections(prevSections => [...prevSections, section]);\n          }\n        });\n      },\n      { rootMargin: '0px 0px -10% 0px' }\n    );\n\n    const indicatorObserver = new IntersectionObserver(\n      ([entry]) => {\n        setScrollIndicatorHidden(!entry.isIntersecting);\n      },\n      { rootMargin: '-100% 0px 0px 0px' }\n    );\n\n    revealSections.forEach(section => {\n      sectionObserver.observe(section.current);\n    });\n\n    indicatorObserver.observe(intro.current);\n\n    return () => {\n      sectionObserver.disconnect();\n      indicatorObserver.disconnect();\n    };\n  }, [visibleSections]);\n\n  useEffect(() => {\n    const hasEntered = status === 'entered';\n    const supportsNativeSmoothScroll = 'scrollBehavior' in document.documentElement.style;\n    let scrollObserver;\n    let scrollTimeout;\n\n    const handleHashchange = (hash, scroll) => {\n      clearTimeout(scrollTimeout);\n      const hashSections = [intro, projectOne, about];\n      const hashString = hash.replace('#', '');\n      const element = hashSections.filter(item => item.current.id === hashString)[0];\n      if (!element) return;\n      const behavior = scroll && !prefersReducedMotion ? 'smooth' : 'instant';\n      const top = element.current.offsetTop;\n\n      scrollObserver = new IntersectionObserver(\n        (entries, observer) => {\n          const [entry] = entries;\n          if (entry.isIntersecting) {\n            scrollTimeout = setTimeout(\n              () => {\n                element.current.focus();\n              },\n              prefersReducedMotion ? 0 : 400\n            );\n            observer.unobserve(entry.target);\n          }\n        },\n        { rootMargin: '-20% 0px -20% 0px' }\n      );\n\n      scrollObserver.observe(element.current);\n\n      if (supportsNativeSmoothScroll) {\n        window.scroll({\n          top,\n          left: 0,\n          behavior,\n        });\n      } else {\n        window.scrollTo(0, top);\n      }\n    };\n\n    if (hash && initHash.current && hasEntered) {\n      handleHashchange(hash, false);\n      initHash.current = false;\n    } else if (!hash && initHash.current && hasEntered) {\n      window.scrollTo(0, 0);\n      initHash.current = false;\n    } else if (hasEntered) {\n      handleHashchange(hash, true);\n    }\n\n    return () => {\n      clearTimeout(scrollTimeout);\n      if (scrollObserver) {\n        scrollObserver.disconnect();\n      }\n    };\n  }, [hash, state, prefersReducedMotion, status]);\n\n  return (\n    <div className=\"home\">\n      <Helmet>\n        <title>Qiming Liu | Web Developer</title>\n        <link rel=\"prefetch\" href={phone} as=\"fetch\" />\n        <link rel=\"prefetch\" href={laptop} as=\"fetch\" />\n      </Helmet>\n      <Intro\n        id=\"intro\"\n        sectionRef={intro}\n        disciplines={disciplines}\n        scrollIndicatorHidden={scrollIndicatorHidden}\n      />\n      <ProjectSummary\n        id=\"project\"\n        alternate\n        sectionRef={projectOne}\n        visible={visibleSections.includes(projectOne.current)}\n        index={1}\n        title=\"Android Native App - Seen\"\n        description=\"An easy forum Android app include instant messaging.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          textures: [\n            {\n              src: Seen1,\n              srcSet: `${Seen1} 254w, ${Seen1} 508w`,\n              placeholder: Seen1,\n            },\n            {\n              src: Seen2,\n              srcSet: `${Seen2} 254w, ${Seen2} 508w`,\n              placeholder: Seen2,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project2\"\n        sectionRef={projectTwo}\n        visible={visibleSections.includes(projectTwo.current)}\n        index={2}\n        title=\"ThinkMore Community Forum\"\n        description=\"A forum build with Next.js and Spring Boot\"\n        buttonText=\"View Project\"\n        buttonLink=\"www.thinkmoreapp.com\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: ThinkMoreForum,\n              srcSet: `${ThinkMoreForum} 980w, ${ThinkMoreForum} 1376w`,\n              placeholder: ThinkMoreForum,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project3\"\n        alternate\n        sectionRef={projectThree}\n        visible={visibleSections.includes(projectThree.current)}\n        index={3}\n        title=\"MyGuard\"\n        description=\"Raspberry Pi - Android - Sensor: Indoor Surveillance System (Firebase, Tensorflow.js, Cordova, cdnVue2)\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/Seen\"\n        model={{\n          type: 'phone',\n          alt: 'App login screen',\n          textures: [\n            {\n              src: MyGuard2,\n              srcSet: `${MyGuard2} 254w, ${MyGuard2} 508w`,\n              placeholder: MyGuard2,\n            },\n            {\n              src: MyGuard1,\n              srcSet: `${MyGuard1} 254w, ${MyGuard1} 508w`,\n              placeholder: MyGuard1,\n            },\n          ],\n        }}\n      />\n      <ProjectSummary\n        id=\"project4\"\n        sectionRef={projectFour}\n        visible={visibleSections.includes(projectFour.current)}\n        index={4}\n        title=\"Web Subtitle Player\"\n        description=\"A Local Web .srt (Subtitle) File Player. You can pause, play and adjust the font size.\"\n        buttonText=\"View Project\"\n        buttonLink=\"https://github.com/Qiming-Liu/WebSubtitlePlayer\"\n        model={{\n          type: 'laptop',\n          textures: [\n            {\n              src: WebSubtitlePlayer,\n              srcSet: `${WebSubtitlePlayer} 980w, ${WebSubtitlePlayer} 1376w`,\n              placeholder: WebSubtitlePlayer,\n            },\n          ],\n        }}\n      />\n      <Profile\n        id=\"about\"\n        sectionRef={about}\n        visible={visibleSections.includes(about.current)}\n      />\n      <Footer />\n    </div>\n  );\n};\n\nexport default Home;\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","export default __webpack_public_path__ + \"static/media/gotham-bold.73ce573b.woff2\";","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">{`© ${new Date().getFullYear()} Qiming Liu`}</span>\n  </footer>\n);\n\nexport default Footer;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import { useRef, useEffect, memo } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion } from 'hooks';\nimport { spring, chain, delay, value } from 'popmotion';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport prerender from 'utils/prerender';\nimport { glyphList } from 'app/config';\nimport './index.css';\n\nconst CharType = {\n  Glyph: 'glyph',\n  Value: 'value',\n};\n\nfunction shuffle(content, output, position) {\n  return content.map((value, index) => {\n    if (index < position) {\n      return { type: CharType.Value, value };\n    }\n\n    if (position % 1 < 0.5) {\n      const rand = Math.floor(Math.random() * glyphList.length);\n      return { type: CharType.Glyph, value: glyphList[rand] };\n    }\n\n    return { type: CharType.Glyph, value: output[index].value };\n  });\n}\n\nconst DecoderText = ({\n  text,\n  start = true,\n  delay: startDelay = 0,\n  className,\n  ...rest\n}) => {\n  const output = useRef([{ type: CharType.Glyph, value: '' }]);\n  const container = useRef();\n  const reduceMotion = usePrefersReducedMotion();\n\n  useEffect(() => {\n    const containerInstance = container.current;\n    const content = text.split('');\n    let animation;\n\n    const renderOutput = () => {\n      const characterMap = output.current.map(item => {\n        return `<span class=\"decoder-text__${item.type}\">${item.value}</span>`;\n      });\n\n      containerInstance.innerHTML = characterMap.join('');\n    };\n\n    const springValue = value(0, position => {\n      output.current = shuffle(content, output.current, position);\n      renderOutput();\n    });\n\n    if (start && !animation && !reduceMotion && !prerender) {\n      animation = chain(\n        delay(startDelay),\n        spring({\n          from: 0,\n          to: content.length,\n          stiffness: 8,\n          damping: 5,\n        })\n      ).start(springValue);\n    }\n\n    if (reduceMotion) {\n      output.current = content.map((value, index) => ({\n        type: CharType.Value,\n        value: content[index],\n      }));\n      renderOutput();\n    }\n\n    return () => {\n      if (animation) {\n        animation.stop();\n      }\n    };\n  }, [reduceMotion, start, startDelay, text]);\n\n  return (\n    <span className={classNames('decoder-text', className)} {...rest}>\n      <VisuallyHidden className=\"decoder-text__label\">{text}</VisuallyHidden>\n      <span aria-hidden className=\"decoder-text__content\" ref={container} />\n    </span>\n  );\n};\n\nexport default memo(DecoderText);\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n","/**\n * Clean up a scene's materials and geometry\n */\nexport const cleanScene = scene => {\n  scene.traverse(object => {\n    if (!object.isMesh) return;\n\n    object.geometry.dispose();\n\n    if (object.material.isMaterial) {\n      cleanMaterial(object.material);\n    } else {\n      for (const material of object.material) {\n        cleanMaterial(material);\n      }\n    }\n  });\n};\n\n/**\n * Clean up and dispose of a material\n */\nexport const cleanMaterial = material => {\n  material.dispose();\n\n  for (const key of Object.keys(material)) {\n    const value = material[key];\n    if (value && typeof value === 'object' && 'minFilter' in value) {\n      value.dispose();\n    }\n  }\n};\n\n/**\n * Clean up and dispose of a renderer\n */\nexport const cleanRenderer = renderer => {\n  renderer.dispose();\n  renderer.forceContextLoss();\n  renderer = null;\n};\n\n/**\n * Clean up lights by removing them from their parent\n */\nexport const removeLights = lights => {\n  for (const light of lights) {\n    light.parent.remove(light);\n  }\n};\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n"],"sourceRoot":""}