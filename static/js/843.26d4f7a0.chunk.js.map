{"version":3,"file":"static/js/843.26d4f7a0.chunk.js","mappings":"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","sources":["components/Footer/index.js","components/Heading/index.js","components/Image/index.js","components/Section/index.js","components/Text/index.js","combination/ProjectLayout/index.js","pages/Weather/index.js","utils/image.js","utils/prerender.js","webpack://qiming-liu.github.io/./src/pages/Weather/index.css?1800"],"sourcesContent":["import './index.css';\n\nconst Footer = () => (\n  <footer className=\"footer\">\n    <span className=\"footer__date\">{`Â© ${new Date().getFullYear()} Qiming Liu`}</span>\n  </footer>\n);\n\nexport default Footer;\n","import { Fragment } from 'react';\nimport classNames from 'classnames';\nimport { Helmet } from 'react-helmet';\nimport GothamBold from 'assets/fonts/gotham-bold.woff2';\nimport './index.css';\n\nconst Heading = ({\n  children,\n  level = 1,\n  as,\n  align = 'auto',\n  weight = 'medium',\n  className,\n  ...rest\n}) => {\n  const clampedLevel = Math.min(Math.max(level, 0), 4);\n  const Component = as || `h${Math.max(clampedLevel, 1)}`;\n\n  return (\n    <Fragment>\n      {/* Conditionally load the bold font weight because we use it less frequently */}\n      {weight === 'bold' && (\n        <Helmet>\n          <link rel=\"preload\" href={GothamBold} as=\"font\" crossorigin=\"\" />\n          <style>\n            {`\n              @font-face {\n                font-family: 'Gotham';\n                font-weight: 700;\n                src: url(${GothamBold}) format('woff2');\n                font-display: swap;\n              }\n            `}\n          </style>\n        </Helmet>\n      )}\n      <Component\n        className={classNames(\n          className,\n          'heading',\n          `heading--align-${align}`,\n          `heading--level-${clampedLevel}`,\n          `heading--weight-${weight}`\n        )}\n        {...rest}\n      >\n        {children}\n      </Component>\n    </Fragment>\n  );\n};\n\nexport default Heading;\n","import { useState, useEffect, useRef, useCallback, Fragment } from 'react';\nimport classNames from 'classnames';\nimport { usePrefersReducedMotion, useInViewport } from 'hooks';\nimport { Button } from 'components/Button';\nimport Icon from 'components/Icon';\nimport { Transition } from 'react-transition-group';\nimport { reflow } from 'utils/transition';\nimport prerender from 'utils/prerender';\nimport { tokens } from 'components/ThemeProvider/theme';\nimport { msToNum, numToMs } from 'utils/style';\nimport { resolveVideoSrcFromSrcSet } from 'utils/image';\nimport { useTheme } from 'components/ThemeProvider';\nimport VisuallyHidden from 'components/VisuallyHidden';\nimport './index.css';\n\nconst Image = ({ className, style, reveal, delay = 0, raised, src, ...rest }) => {\n  const [loaded, setLoaded] = useState(false);\n  const { themeId } = useTheme();\n  const containerRef = useRef();\n  const inViewport = useInViewport(containerRef, !src?.endsWith('.mp4'));\n\n  const onLoad = useCallback(() => {\n    setLoaded(true);\n  }, []);\n\n  return (\n    <div\n      className={classNames('image', className, `image--${themeId}`, {\n        'image--in-viewport': inViewport,\n        'image--reveal': reveal,\n        'image--raised': raised,\n      })}\n      style={{ ...style, '--delay': numToMs(delay) }}\n      ref={containerRef}\n    >\n      <ImageElements\n        delay={delay}\n        onLoad={onLoad}\n        loaded={loaded}\n        inViewport={inViewport}\n        reveal={reveal}\n        src={src}\n        {...rest}\n      />\n    </div>\n  );\n};\n\nconst ImageElements = ({\n  onLoad,\n  loaded,\n  inViewport,\n  srcSet,\n  placeholder,\n  delay,\n  src,\n  alt,\n  play = true,\n  reveal,\n  ...rest\n}) => {\n  const prefersReducedMotion = usePrefersReducedMotion();\n  const [showPlaceholder, setShowPlaceholder] = useState(true);\n  const [playing, setPlaying] = useState(!prefersReducedMotion);\n  const [showPlayButton, setShowPlayButton] = useState(false);\n  const [isHovered, setIsHovered] = useState(false);\n  const [isFocused, setIsFocused] = useState(false);\n  const [placeholderSize, setPlaceholderSize] = useState();\n  const [videoSrc, setVideoSrc] = useState();\n  const placeholderRef = useRef();\n  const videoRef = useRef();\n  const isVideo = src?.endsWith('.mp4');\n  const imgSrc = src || srcSet?.split(' ')[0];\n  const showFullRes = !prerender && inViewport;\n\n  useEffect(() => {\n    const purgePlaceholder = () => {\n      setShowPlaceholder(false);\n    };\n\n    const placeholderElement = placeholderRef.current;\n    placeholderElement.addEventListener('transitionend', purgePlaceholder);\n\n    return function cleanUp() {\n      if (placeholderElement) {\n        placeholderElement.removeEventListener('transitionend', purgePlaceholder);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    const resolveVideoSrc = async () => {\n      const resolvedVideoSrc = await resolveVideoSrcFromSrcSet(srcSet);\n      setVideoSrc(resolvedVideoSrc);\n    };\n\n    if (isVideo && srcSet) {\n      resolveVideoSrc();\n    } else if (isVideo) {\n      setVideoSrc(src);\n    }\n  }, [isVideo, src, srcSet]);\n\n  useEffect(() => {\n    const { width, height } = placeholderRef.current;\n\n    if (width && height) {\n      setPlaceholderSize({ width, height });\n    }\n  }, []);\n\n  useEffect(() => {\n    if (!videoRef.current || !videoSrc) return;\n\n    if (!play || !inViewport) {\n      setPlaying(false);\n      videoRef.current.pause();\n    } else if (inViewport && !prefersReducedMotion && !prerender) {\n      setPlaying(true);\n      videoRef.current.play();\n    }\n  }, [inViewport, play, prefersReducedMotion, videoSrc]);\n\n  const handlePlaceholderLoad = event => {\n    const { width, height } = event.target;\n    setPlaceholderSize({ width, height });\n  };\n\n  const togglePlaying = event => {\n    event.preventDefault();\n\n    if (videoRef.current.paused) {\n      setPlaying(true);\n      videoRef.current.play();\n    } else {\n      setPlaying(false);\n      videoRef.current.pause();\n    }\n  };\n\n  const handleShowPlayButton = () => {\n    setShowPlayButton(true);\n    setIsHovered(true);\n  };\n\n  const handleFocusPlayButton = () => {\n    setShowPlayButton(true);\n    setIsFocused(true);\n  };\n\n  return (\n    <div\n      className={classNames('image__element-wrapper', {\n        'image__element-wrapper--reveal': reveal,\n        'image__element-wrapper--in-viewport': inViewport,\n      })}\n      onMouseOver={isVideo ? handleShowPlayButton : undefined}\n      onMouseOut={isVideo ? () => setIsHovered(false) : undefined}\n      style={{ '--delay': numToMs(delay + 1000) }}\n    >\n      {isVideo && (\n        <Fragment>\n          <video\n            muted\n            loop\n            playsInline\n            className={classNames('image__element', { 'image__element--loaded': loaded })}\n            autoPlay={!prefersReducedMotion}\n            role=\"img\"\n            onLoadStart={onLoad}\n            src={videoSrc}\n            aria-label={alt}\n            ref={videoRef}\n            {...rest}\n          />\n          <Transition\n            in={isHovered || isFocused}\n            onExit={reflow}\n            onExited={() => setShowPlayButton(false)}\n            timeout={{ enter: 0, exit: msToNum(tokens.base.durationS) }}\n          >\n            {status => (\n              <VisuallyHidden visible={showPlayButton}>\n                <Button\n                  className={classNames('image__button', `image__button--${status}`)}\n                  onFocus={handleFocusPlayButton}\n                  onBlur={() => setIsFocused(false)}\n                  onClick={togglePlaying}\n                >\n                  <Icon icon={playing ? 'pause' : 'play'} />\n                  {playing ? 'Pause' : 'Play'}\n                </Button>\n              </VisuallyHidden>\n            )}\n          </Transition>\n        </Fragment>\n      )}\n      {!isVideo && (\n        <img\n          className={classNames('image__element', { 'image__element--loaded': loaded })}\n          onLoad={onLoad}\n          decoding=\"async\"\n          src={showFullRes ? imgSrc : undefined}\n          srcSet={showFullRes ? srcSet : undefined}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          alt={alt}\n          {...rest}\n        />\n      )}\n      {showPlaceholder && (\n        <img\n          aria-hidden\n          className={classNames('image__placeholder', {\n            'image__placeholder--loaded': loaded,\n          })}\n          style={{ '--delay': numToMs(delay) }}\n          ref={placeholderRef}\n          src={placeholder}\n          onLoad={handlePlaceholderLoad}\n          width={placeholderSize?.width}\n          height={placeholderSize?.height}\n          decoding=\"async\"\n          alt=\"\"\n          role=\"presentation\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Image;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport './index.css';\n\nconst Section = forwardRef(\n  ({ as: Component = 'div', children, className, ...rest }, ref) => (\n    <Component className={classNames('section', className)} ref={ref} {...rest}>\n      {children}\n    </Component>\n  )\n);\n\nexport default Section;\n","import classNames from 'classnames';\nimport './index.css';\n\nconst Text = ({\n  children,\n  size = 'm',\n  as: Component = 'p',\n  align = 'auto',\n  weight = 'auto',\n  secondary,\n  className,\n  ...rest\n}) => {\n  return (\n    <Component\n      className={classNames(\n        className,\n        'text',\n        `text--align-${align}`,\n        `text--size-${size}`,\n        `text--weight-${weight}`,\n        {\n          'text--secondary': secondary,\n        }\n      )}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Text;\n","import { forwardRef } from 'react';\nimport classNames from 'classnames';\nimport Image from 'components/Image';\nimport { Button } from 'components/Button';\nimport { useParallax } from 'hooks';\nimport prerender from 'utils/prerender';\nimport Section from 'components/Section';\nimport { numToPx, numToMs } from 'utils/style';\nimport Heading from 'components/Heading';\nimport Text from 'components/Text';\nimport './index.css';\n\nconst initDelay = 300;\n\nexport function ProjectHeader({\n  title,\n  description,\n  linkLabel = 'Visit website',\n  url,\n  columns,\n  className,\n}) {\n  return (\n    <Section className={classNames('project__header', className)}>\n      <div\n        className=\"project__header-content\"\n        style={{ '--initDelay': numToMs(initDelay) }}\n      >\n        <div className=\"project__details\">\n          <Heading\n            className={classNames('project__title', {\n              'project__title--entered': !prerender,\n            })}\n            level={2}\n            as=\"h1\"\n          >\n            {title}\n          </Heading>\n          <Text\n            className={classNames('project__description', {\n              'project__description--entered': !prerender,\n            })}\n            size=\"xl\"\n          >\n            {description}\n          </Text>\n          {!!url && (\n            <Button\n              secondary\n              iconHoverShift\n              className={classNames('project__link-button', {\n                'project__link-button--entered': !prerender,\n              })}\n              icon=\"chevronRight\"\n              href={url}\n            >\n              {linkLabel}\n            </Button>\n          )}\n        </div>\n        {!!columns?.length && (\n          <ul className=\"project__meta\">\n            {columns?.map((role, index) => (\n              <li\n                className={classNames('project__meta-item', {\n                  'project__meta-item--entered': !prerender,\n                })}\n                style={{ '--delay': numToMs(initDelay + 300 + index * 140) }}\n                key={role}\n              >\n                <Text secondary as=\"span\">\n                  {role}\n                </Text>\n              </li>\n            ))}\n          </ul>\n        )}\n      </div>\n    </Section>\n  );\n}\n\nexport const ProjectContainer = ({ className, ...rest }) => (\n  <article className={classNames('project', className)} {...rest} />\n);\n\nexport const ProjectSection = forwardRef(\n  (\n    {\n      className,\n      light,\n      first,\n      fullHeight,\n      backgroundOverlayOpacity = 0.9,\n      backgroundElement,\n      children,\n      ...rest\n    },\n    ref\n  ) => (\n    <section\n      className={classNames('project__section', className, {\n        'project__section--light': light,\n        'project__section--full-height': fullHeight,\n      })}\n      ref={ref}\n      {...rest}\n    >\n      {!!backgroundElement && (\n        <div\n          className=\"project__section-background\"\n          style={{ '--opacity': backgroundOverlayOpacity }}\n        >\n          {backgroundElement}\n        </div>\n      )}\n      <Section\n        className={classNames('project__section-inner', {\n          'project__section-inner--first': first,\n        })}\n      >\n        {children}\n      </Section>\n    </section>\n  )\n);\n\nexport const ProjectBackground = ({ opacity = 0.7, className, entered, ...rest }) => {\n  const offset = useParallax(0.6);\n\n  return (\n    <div\n      className={classNames('project__background-image', className, {\n        'project__background-image--entered': entered,\n      })}\n    >\n      <div\n        className=\"project__background-image-element\"\n        style={{\n          '--offset': numToPx(offset),\n        }}\n      >\n        <Image alt=\"\" role=\"presentation\" {...rest} />\n      </div>\n      <div className=\"project__background-scrim\" style={{ '--opacity': opacity }} />\n    </div>\n  );\n};\n\nexport const ProjectImage = ({ className, ...rest }) => (\n  <div className={classNames('project__image', className)}>\n    <Image reveal delay={300} {...rest} />\n  </div>\n);\n\nexport const ProjectSectionContent = ({ className, width = 'l', ...rest }) => (\n  <div\n    className={classNames(\n      'project__section-content',\n      `project__section-content--width-${width}`,\n      className\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionHeading = ({ className, level = 3, as = 'h2', ...rest }) => (\n  <Heading\n    className={classNames('project__section-heading', className)}\n    as={as}\n    level={level}\n    align=\"auto\"\n    {...rest}\n  />\n);\n\nexport const ProjectSectionText = ({ className, ...rest }) => (\n  <Text className={classNames('project__section-text', className)} size=\"l\" {...rest} />\n);\n\nexport const ProjectTextRow = ({\n  center,\n  stretch,\n  justify = 'center',\n  width = 'm',\n  noMargin,\n  className,\n  centerMobile,\n  ...rest\n}) => (\n  <div\n    className={classNames(\n      'project__text-row',\n      `project__text-row--justify-${justify}`,\n      `project__text-row--width-${width}`,\n      className,\n      {\n        'project__text-row--center': center,\n        'project__text-row--stretch': stretch,\n        'project__text-row--center-mobile': centerMobile,\n        'project__text-row--no-margin': noMargin,\n      }\n    )}\n    {...rest}\n  />\n);\n\nexport const ProjectSectionColumns = ({ className, centered, ...rest }) => (\n  <ProjectSectionContent\n    className={classNames(\n      'project__section-columns',\n      { 'project__section-columns--centered': centered },\n      className\n    )}\n    {...rest}\n  />\n);\n","import './index.css';\n\nimport { Fragment, Suspense, lazy } from 'react';\nimport { Helmet } from 'react-helmet';\nimport Footer from 'components/Footer';\n\nimport {\n  ProjectContainer,\n  ProjectSection,\n  ProjectSectionContent,\n  ProjectHeader,\n  ProjectSectionHeading,\n  ProjectSectionText,\n  ProjectTextRow,\n} from 'combination/ProjectLayout';\n\nconst DisplacementSphere = lazy(() => import('pages/Home/DisplacementSphere'));\n// const WeatherCard = lazy(() => import('combination/WeatherCard'));\n\nconst title = 'Weather Web Application';\nconst description =\n  'You can input a city name to show the current weather in that city area and the forecast for the upcoming 3 days. I use www.weatherapi.com, which provides a free API to query weather data.';\nconst columns = ['React', 'Axios', 'WeatherAPI'];\n\nconst Weather = () => {\n  return (\n    <Fragment>\n      <Helmet>\n        <title>Weather | Qiming Liu</title>\n      </Helmet>\n      <Suspense fallback={null}>\n        <DisplacementSphere />\n      </Suspense>\n      <ProjectContainer className=\"weathera\">\n        <ProjectHeader title={title} description={description} columns={columns} />\n        <ProjectSection first>\n          {/* <WeatherCard /> */}\n        </ProjectSection>\n        <ProjectSection>\n          <ProjectSectionContent>\n            <ProjectTextRow center centerMobile noMargin>\n              <ProjectSectionHeading>Review</ProjectSectionHeading>\n              <ProjectSectionText>What I learned from this project.</ProjectSectionText>\n            </ProjectTextRow>\n          </ProjectSectionContent>\n        </ProjectSection>\n      </ProjectContainer>\n      <Footer />\n    </Fragment>\n  );\n};\n\nexport default Weather;\n","/**\n * Uses the browser's image loading to get the correct image src from a srcSet\n */\nexport async function getImageFromSrcSet({ src, srcSet, sizes }) {\n  return new Promise((resolve, reject) => {\n    try {\n      if (!src && !srcSet) {\n        throw new Error('No image src or srcSet provided');\n      }\n\n      const tempImage = new Image();\n\n      if (src) {\n        tempImage.src = src;\n      }\n\n      if (srcSet) {\n        tempImage.srcset = srcSet;\n      }\n\n      if (sizes) {\n        tempImage.sizes = sizes;\n      }\n\n      const onLoad = () => {\n        tempImage.removeEventListener('load', onLoad);\n        const source = tempImage.currentSrc;\n        resolve(source);\n      };\n\n      tempImage.addEventListener('load', onLoad);\n    } catch (error) {\n      reject(`Error loading ${srcSet}: ${error}`);\n    }\n  });\n}\n\n/**\n * Generates a transparent png of a given width and height\n */\nexport function generateImage(width = 1, height = 1) {\n  const canvas = document.createElement('canvas');\n  const ctx = canvas.getContext('2d');\n\n  canvas.width = width;\n  canvas.height = height;\n\n  ctx.fillStyle = 'rgba(0, 0, 0, 0)';\n  ctx.fillRect(0, 0, width, height);\n  const image = canvas.toDataURL('image/png', '');\n  canvas.remove();\n  return image;\n}\n\n/**\n * Use native image srcSet resolution for video sources\n */\nexport async function resolveVideoSrcFromSrcSet(srcSet) {\n  const sources = srcSet.split(', ').map(srcString => {\n    const [src, width] = srcString.split(' ');\n    const image = generateImage(Number(width.replace('w', '')));\n    return { src, image, width };\n  });\n\n  const fakeSrcSet = sources.map(({ image, width }) => `${image} ${width}`).join(', ');\n  const fakeSrc = await getImageFromSrcSet({ srcSet: fakeSrcSet });\n\n  const videoSrc = sources.find(src => src.image === fakeSrc);\n  return videoSrc.src;\n}\n","/**\n * Returns true if being prerendered by react-snap. Useful for stuff\n * that needs to only run client-side and not during prerendering\n */\nconst prerender = navigator.userAgent === 'ReactSnap';\nexport default prerender;\n","// extracted by mini-css-extract-plugin\nexport default {};"],"names":["Footer","_jsx","className","children","Date","getFullYear","_ref","level","as","align","weight","rest","clampedLevel","Math","min","max","Component","_jsxs","Fragment","Helmet","rel","href","GothamBold","crossorigin","classNames","ImageElements","_ref2","onLoad","loaded","inViewport","srcSet","placeholder","delay","src","alt","play","reveal","prefersReducedMotion","usePrefersReducedMotion","showPlaceholder","setShowPlaceholder","useState","playing","setPlaying","showPlayButton","setShowPlayButton","isHovered","setIsHovered","isFocused","setIsFocused","placeholderSize","setPlaceholderSize","videoSrc","setVideoSrc","placeholderRef","useRef","videoRef","isVideo","endsWith","imgSrc","split","showFullRes","prerender","useEffect","purgePlaceholder","placeholderElement","current","addEventListener","removeEventListener","async","resolvedVideoSrc","resolveVideoSrcFromSrcSet","resolveVideoSrc","width","height","pause","togglePlaying","event","preventDefault","paused","handleFocusPlayButton","onMouseOver","handleShowPlayButton","undefined","onMouseOut","style","numToMs","muted","loop","playsInline","autoPlay","role","onLoadStart","ref","Transition","in","onExit","reflow","onExited","timeout","enter","exit","msToNum","tokens","base","durationS","status","VisuallyHidden","visible","Button","onFocus","onBlur","onClick","Icon","icon","decoding","target","raised","setLoaded","themeId","useTheme","containerRef","useInViewport","useCallback","forwardRef","size","secondary","ProjectHeader","title","description","linkLabel","url","columns","Section","Heading","Text","iconHoverShift","length","map","index","initDelay","ProjectContainer","ProjectSection","_ref3","light","first","fullHeight","backgroundOverlayOpacity","backgroundElement","ProjectSectionContent","_ref6","ProjectSectionHeading","_ref7","ProjectSectionText","_ref8","ProjectTextRow","_ref9","center","stretch","justify","noMargin","centerMobile","DisplacementSphere","lazy","Weather","Suspense","fallback","getImageFromSrcSet","sizes","Promise","resolve","reject","Error","tempImage","Image","srcset","source","currentSrc","error","sources","srcString","image","arguments","canvas","document","createElement","ctx","getContext","fillStyle","fillRect","toDataURL","remove","generateImage","Number","replace","fakeSrcSet","join","fakeSrc","find","navigator","userAgent"],"sourceRoot":""}